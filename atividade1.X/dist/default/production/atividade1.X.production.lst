

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Oct 06 20:04:17 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F4520 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataCOMRAM
    66  0077F0                     __pidataCOMRAM:
    67                           	callstack 0
    68                           
    69                           ;initializer for main@F5
    70  0077F0  61                 	db	97
    71  0077F1  62                 	db	98
    72  0077F2  63                 	db	99
    73  0077F3  64                 	db	100
    74  0077F4  65                 	db	101
    75  0077F5  66                 	db	102
    76  0077F6  67                 	db	103
    77  0077F7  0A                 	db	10
    78  0077F8  68                 	db	104
    79  0077F9  6A                 	db	106
    80  0077FA  6B                 	db	107
    81  0077FB  6C                 	db	108
    82  0077FC  6D                 	db	109
    83  0077FD  6E                 	db	110
    84  0077FE  6F                 	db	111
    85  0077FF  00                 	db	0
    86  0000                     _TRISE	set	3990
    87  0000                     _TRISD	set	3989
    88  0000                     _TRISC	set	3988
    89  0000                     _TRISB	set	3987
    90  0000                     _TRISA	set	3986
    91  0000                     _PORTE	set	3972
    92  0000                     _PORTD	set	3971
    93  0000                     _PORTC	set	3970
    94  0000                     _PORTB	set	3969
    95  0000                     _PORTA	set	3968
    96                           
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100  007888                     __pcinit:
   101                           	callstack 0
   102  007888                     start_initialization:
   103                           	callstack 0
   104  007888                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Initialize objects allocated to COMRAM (16 bytes)
   108                           ; load TBLPTR registers with __pidataCOMRAM
   109  007888  0EF0               	movlw	low __pidataCOMRAM
   110  00788A  6EF6               	movwf	tblptrl,c
   111  00788C  0E77               	movlw	high __pidataCOMRAM
   112  00788E  6EF7               	movwf	tblptrh,c
   113  007890  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   114  007892  6EF8               	movwf	tblptru,c
   115  007894  EE00  F023         	lfsr	0,__pdataCOMRAM
   116  007898  EE10 F010          	lfsr	1,16
   117  00789C                     copy_data0:
   118  00789C  0009               	tblrd		*+
   119  00789E  CFF5 FFEE          	movff	tablat,postinc0
   120  0078A2  50E5               	movf	postdec1,w,c
   121  0078A4  50E1               	movf	fsr1l,w,c
   122  0078A6  E1FA               	bnz	copy_data0
   123  0078A8                     end_of_initialization:
   124                           	callstack 0
   125  0078A8                     __end_of__initialization:
   126                           	callstack 0
   127  0078A8  0100               	movlb	0
   128  0078AA  EF31  F03C         	goto	_main	;jump to C main() function
   129                           
   130                           	psect	dataCOMRAM
   131  000023                     __pdataCOMRAM:
   132                           	callstack 0
   133  000023                     main@F5:
   134                           	callstack 0
   135  000023                     	ds	16
   136                           
   137                           	psect	cstackCOMRAM
   138  000001                     __pcstackCOMRAM:
   139                           	callstack 0
   140  000001                     digitalWrite@pin:
   141                           	callstack 0
   142  000001                     pinMode@pin:
   143                           	callstack 0
   144  000001                     delayMicro@a:
   145                           	callstack 0
   146  000001                     delayMili@a:
   147                           	callstack 0
   148                           
   149                           ; 2 bytes @ 0x0
   150  000001                     	ds	2
   151  000003                     ??_delayMili:
   152  000003                     digitalWrite@value:
   153                           	callstack 0
   154  000003                     pinMode@type:
   155                           	callstack 0
   156                           
   157                           ; 2 bytes @ 0x2
   158  000003                     	ds	1
   159  000004                     delayMili@i:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x3
   163  000004                     	ds	1
   164  000005                     ??_digitalWrite:
   165  000005                     ??_pinMode:
   166                           
   167                           ; 1 bytes @ 0x4
   168  000005                     	ds	2
   169  000007                     soWrite@value:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x6
   173  000007                     	ds	2
   174  000009                     soWrite@i:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x8
   178  000009                     	ds	1
   179  00000A                     pushNibble@rs:
   180                           	callstack 0
   181  00000A                     pushByte@rs:
   182                           	callstack 0
   183                           
   184                           ; 2 bytes @ 0x9
   185  00000A                     	ds	2
   186  00000C                     ??_pushByte:
   187  00000C                     pushNibble@value:
   188                           	callstack 0
   189                           
   190                           ; 1 bytes @ 0xB
   191  00000C                     	ds	1
   192  00000D                     pushByte@value:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0xC
   196  00000D                     	ds	1
   197  00000E                     lcdCommand@value:
   198                           	callstack 0
   199  00000E                     lcdChar@value:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0xD
   203  00000E                     	ds	1
   204  00000F                     printf@msg:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0xE
   208  00000F                     	ds	2
   209  000011                     
   210                           ; 1 bytes @ 0x10
   211  000011                     	ds	1
   212  000012                     printf@i:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x11
   216  000012                     	ds	1
   217  000013                     main@msg:
   218                           	callstack 0
   219                           
   220                           ; 16 bytes @ 0x12
   221  000013                     	ds	16
   222                           
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 5 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;  msg            16   18[COMRAM] unsigned char [16]
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : 0/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   242 ;;      Params:         0       0       0       0       0       0       0
   243 ;;      Locals:        16       0       0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0       0       0
   245 ;;      Totals:        16       0       0       0       0       0       0
   246 ;;Total ram usage:       16 bytes
   247 ;; Hardware stack levels required when called: 7
   248 ;; This function calls:
   249 ;;		_printf
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text0
   256  007862                     __ptext0:
   257                           	callstack 0
   258  007862                     _main:
   259                           	callstack 24
   260  007862                     
   261                           ;main.c: 6:     char msg[16]= "abcdefg\nhjklmno";
   262  007862  EE20  F023         	lfsr	2,main@F5
   263  007866  EE10  F013         	lfsr	1,main@msg
   264  00786A  0E0F               	movlw	15
   265  00786C                     u1031:
   266  00786C  CFDB FFE3          	movff	plusw2,plusw1
   267  007870  06E8               	decf	wreg,f,c
   268  007872  E2FC               	bc	u1031
   269  007874                     
   270                           ;main.c: 7:     printf(msg);
   271  007874  0E13               	movlw	low main@msg
   272  007876  6E0F               	movwf	printf@msg^0,c
   273  007878  0E00               	movlw	high main@msg
   274  00787A  6E10               	movwf	(printf@msg+1)^0,c
   275  00787C  EC00  F03D         	call	_printf	;wreg free
   276  007880                     l155:
   277  007880  EF40  F03C         	goto	l155
   278  007884  EF00  F000         	goto	start
   279  007888                     __end_of_main:
   280                           	callstack 0
   281                           
   282 ;; *************** function _printf *****************
   283 ;; Defined at:
   284 ;;		line 4 in file "stdio.c"
   285 ;; Parameters:    Size  Location     Type
   286 ;;  msg             2   14[COMRAM] PTR unsigned char 
   287 ;;		 -> main@msg(16), 
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  i               1   17[COMRAM] unsigned char 
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   299 ;;      Params:         2       0       0       0       0       0       0
   300 ;;      Locals:         1       0       0       0       0       0       0
   301 ;;      Temps:          1       0       0       0       0       0       0
   302 ;;      Totals:         4       0       0       0       0       0       0
   303 ;;Total ram usage:        4 bytes
   304 ;; Hardware stack levels used: 1
   305 ;; Hardware stack levels required when called: 6
   306 ;; This function calls:
   307 ;;		_lcdChar
   308 ;;		_lcdCommand
   309 ;;		_lcdInit
   310 ;; This function is called by:
   311 ;;		_main
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           	psect	text1
   316  007A00                     __ptext1:
   317                           	callstack 0
   318  007A00                     _printf:
   319                           	callstack 24
   320  007A00                     
   321                           ;stdio.c: 5:     lcdInit();
   322  007A00  EC58  F03D         	call	_lcdInit	;wreg free
   323  007A04                     
   324                           ;stdio.c: 6:     char i;;stdio.c: 7:     for(i=0; i < 15; i++){
   325  007A04  0E00               	movlw	0
   326  007A06  6E12               	movwf	printf@i^0,c
   327  007A08                     l1220:
   328                           
   329                           ;stdio.c: 8:         if(msg[i] == '\n'){
   330  007A08  5012               	movf	printf@i^0,w,c
   331  007A0A  240F               	addwf	printf@msg^0,w,c
   332  007A0C  6ED9               	movwf	fsr2l,c
   333  007A0E  0E00               	movlw	0
   334  007A10  2010               	addwfc	(printf@msg+1)^0,w,c
   335  007A12  6EDA               	movwf	fsr2h,c
   336  007A14  0E0A               	movlw	10
   337  007A16  18DE               	xorwf	postinc2,w,c
   338  007A18  A4D8               	btfss	status,2,c
   339  007A1A  EF11  F03D         	goto	u971
   340  007A1E  EF13  F03D         	goto	u970
   341  007A22                     u971:
   342  007A22  EF18  F03D         	goto	l1224
   343  007A26                     u970:
   344  007A26                     
   345                           ;stdio.c: 9:             lcdCommand(0xc0);
   346  007A26  0EC0               	movlw	192
   347  007A28  EC0F  F03C         	call	_lcdCommand
   348                           
   349                           ;stdio.c: 10:         }else{
   350  007A2C  EF21  F03D         	goto	l1226
   351  007A30                     l1224:
   352                           
   353                           ;stdio.c: 11:             lcdChar(msg[i]);
   354  007A30  5012               	movf	printf@i^0,w,c
   355  007A32  240F               	addwf	printf@msg^0,w,c
   356  007A34  6ED9               	movwf	fsr2l,c
   357  007A36  0E00               	movlw	0
   358  007A38  2010               	addwfc	(printf@msg+1)^0,w,c
   359  007A3A  6EDA               	movwf	fsr2h,c
   360  007A3C  50DF               	movf	indf2,w,c
   361  007A3E  EC00  F03C         	call	_lcdChar
   362  007A42                     l1226:
   363                           
   364                           ;stdio.c: 13:     }
   365  007A42  2A12               	incf	printf@i^0,f,c
   366  007A44  0E0E               	movlw	14
   367  007A46  6412               	cpfsgt	printf@i^0,c
   368  007A48  EF28  F03D         	goto	u981
   369  007A4C  EF2A  F03D         	goto	u980
   370  007A50                     u981:
   371  007A50  EF04  F03D         	goto	l1220
   372  007A54                     u980:
   373  007A54  0012               	return		;funcret
   374  007A56                     __end_of_printf:
   375                           	callstack 0
   376                           
   377 ;; *************** function _lcdInit *****************
   378 ;; Defined at:
   379 ;;		line 72 in file "lcd.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, status,2, status,0, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   393 ;;      Params:         0       0       0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels used: 1
   399 ;; Hardware stack levels required when called: 5
   400 ;; This function calls:
   401 ;;		_delayMicro
   402 ;;		_delayMili
   403 ;;		_lcdCommand
   404 ;;		_pinMode
   405 ;;		_pushNibble
   406 ;;		_soInit
   407 ;; This function is called by:
   408 ;;		_printf
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text2
   413  007AB0                     __ptext2:
   414                           	callstack 0
   415  007AB0                     _lcdInit:
   416                           	callstack 24
   417  007AB0                     
   418                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
   419  007AB0  0E00               	movlw	0
   420  007AB2  6E02               	movwf	(pinMode@pin+1)^0,c
   421  007AB4  0E1C               	movlw	28
   422  007AB6  6E01               	movwf	pinMode@pin^0,c
   423  007AB8  0E00               	movlw	0
   424  007ABA  6E04               	movwf	(pinMode@type+1)^0,c
   425  007ABC  0E00               	movlw	0
   426  007ABE  6E03               	movwf	pinMode@type^0,c
   427  007AC0  ECD9  F03E         	call	_pinMode	;wreg free
   428                           
   429                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
   430  007AC4  0E00               	movlw	0
   431  007AC6  6E02               	movwf	(pinMode@pin+1)^0,c
   432  007AC8  0E1D               	movlw	29
   433  007ACA  6E01               	movwf	pinMode@pin^0,c
   434  007ACC  0E00               	movlw	0
   435  007ACE  6E04               	movwf	(pinMode@type+1)^0,c
   436  007AD0  0E00               	movlw	0
   437  007AD2  6E03               	movwf	pinMode@type^0,c
   438  007AD4  ECD9  F03E         	call	_pinMode	;wreg free
   439                           
   440                           ;lcd.c: 75:  soInit();
   441  007AD8  EC99  F03C         	call	_soInit	;wreg free
   442                           
   443                           ;lcd.c: 76:  delayMili(15);
   444  007ADC  0E00               	movlw	0
   445  007ADE  6E02               	movwf	(delayMili@a+1)^0,c
   446  007AE0  0E0F               	movlw	15
   447  007AE2  6E01               	movwf	delayMili@a^0,c
   448  007AE4  EC81  F03C         	call	_delayMili	;wreg free
   449                           
   450                           ;lcd.c: 78:  pushNibble(0x03, 0);
   451  007AE8  0E00               	movlw	0
   452  007AEA  6E0B               	movwf	(pushNibble@rs+1)^0,c
   453  007AEC  0E00               	movlw	0
   454  007AEE  6E0A               	movwf	pushNibble@rs^0,c
   455  007AF0  0E03               	movlw	3
   456  007AF2  EC1E  F03C         	call	_pushNibble
   457                           
   458                           ;lcd.c: 79:  delayMili(5);
   459  007AF6  0E00               	movlw	0
   460  007AF8  6E02               	movwf	(delayMili@a+1)^0,c
   461  007AFA  0E05               	movlw	5
   462  007AFC  6E01               	movwf	delayMili@a^0,c
   463  007AFE  EC81  F03C         	call	_delayMili	;wreg free
   464                           
   465                           ;lcd.c: 80:  pushNibble(0x03, 0);
   466  007B02  0E00               	movlw	0
   467  007B04  6E0B               	movwf	(pushNibble@rs+1)^0,c
   468  007B06  0E00               	movlw	0
   469  007B08  6E0A               	movwf	pushNibble@rs^0,c
   470  007B0A  0E03               	movlw	3
   471  007B0C  EC1E  F03C         	call	_pushNibble
   472  007B10                     
   473                           ;lcd.c: 81:  delayMicro(160);
   474  007B10  0E00               	movlw	0
   475  007B12  6E02               	movwf	(delayMicro@a+1)^0,c
   476  007B14  0EA0               	movlw	160
   477  007B16  6E01               	movwf	delayMicro@a^0,c
   478  007B18  ECF7  F03B         	call	_delayMicro	;wreg free
   479  007B1C                     
   480                           ;lcd.c: 82:  pushNibble(0x03, 0);
   481  007B1C  0E00               	movlw	0
   482  007B1E  6E0B               	movwf	(pushNibble@rs+1)^0,c
   483  007B20  0E00               	movlw	0
   484  007B22  6E0A               	movwf	pushNibble@rs^0,c
   485  007B24  0E03               	movlw	3
   486  007B26  EC1E  F03C         	call	_pushNibble
   487                           
   488                           ;lcd.c: 83:  delayMicro(160);
   489  007B2A  0E00               	movlw	0
   490  007B2C  6E02               	movwf	(delayMicro@a+1)^0,c
   491  007B2E  0EA0               	movlw	160
   492  007B30  6E01               	movwf	delayMicro@a^0,c
   493  007B32  ECF7  F03B         	call	_delayMicro	;wreg free
   494  007B36                     
   495                           ;lcd.c: 85:  pushNibble(0x02, 0);
   496  007B36  0E00               	movlw	0
   497  007B38  6E0B               	movwf	(pushNibble@rs+1)^0,c
   498  007B3A  0E00               	movlw	0
   499  007B3C  6E0A               	movwf	pushNibble@rs^0,c
   500  007B3E  0E02               	movlw	2
   501  007B40  EC1E  F03C         	call	_pushNibble
   502  007B44                     
   503                           ;lcd.c: 86:  delayMili(10);
   504  007B44  0E00               	movlw	0
   505  007B46  6E02               	movwf	(delayMili@a+1)^0,c
   506  007B48  0E0A               	movlw	10
   507  007B4A  6E01               	movwf	delayMili@a^0,c
   508  007B4C  EC81  F03C         	call	_delayMili	;wreg free
   509  007B50                     
   510                           ;lcd.c: 88:  lcdCommand(0x28);
   511  007B50  0E28               	movlw	40
   512  007B52  EC0F  F03C         	call	_lcdCommand
   513  007B56                     
   514                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
   515  007B56  0E0C               	movlw	12
   516  007B58  EC0F  F03C         	call	_lcdCommand
   517  007B5C                     
   518                           ;lcd.c: 90:  lcdCommand(0x01);
   519  007B5C  0E01               	movlw	1
   520  007B5E  EC0F  F03C         	call	_lcdCommand
   521  007B62  0012               	return		;funcret
   522  007B64                     __end_of_lcdInit:
   523                           	callstack 0
   524                           
   525 ;; *************** function _soInit *****************
   526 ;; Defined at:
   527 ;;		line 3 in file "so.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   541 ;;      Params:         0       0       0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0
   544 ;;      Totals:         0       0       0       0       0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels used: 1
   547 ;; Hardware stack levels required when called: 1
   548 ;; This function calls:
   549 ;;		_pinMode
   550 ;; This function is called by:
   551 ;;		_lcdInit
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text3
   556  007932                     __ptext3:
   557                           	callstack 0
   558  007932                     _soInit:
   559                           	callstack 27
   560  007932                     
   561                           ;so.c: 4:  pinMode(PIN_D7, 0);
   562  007932  0E00               	movlw	0
   563  007934  6E02               	movwf	(pinMode@pin+1)^0,c
   564  007936  0E1F               	movlw	31
   565  007938  6E01               	movwf	pinMode@pin^0,c
   566  00793A  0E00               	movlw	0
   567  00793C  6E04               	movwf	(pinMode@type+1)^0,c
   568  00793E  0E00               	movlw	0
   569  007940  6E03               	movwf	pinMode@type^0,c
   570  007942  ECD9  F03E         	call	_pinMode	;wreg free
   571                           
   572                           ;so.c: 5:  pinMode(PIN_B0, 0);
   573  007946  0E00               	movlw	0
   574  007948  6E02               	movwf	(pinMode@pin+1)^0,c
   575  00794A  0E08               	movlw	8
   576  00794C  6E01               	movwf	pinMode@pin^0,c
   577  00794E  0E00               	movlw	0
   578  007950  6E04               	movwf	(pinMode@type+1)^0,c
   579  007952  0E00               	movlw	0
   580  007954  6E03               	movwf	pinMode@type^0,c
   581  007956  ECD9  F03E         	call	_pinMode	;wreg free
   582                           
   583                           ;so.c: 6:  pinMode(PIN_D6, 0);
   584  00795A  0E00               	movlw	0
   585  00795C  6E02               	movwf	(pinMode@pin+1)^0,c
   586  00795E  0E1E               	movlw	30
   587  007960  6E01               	movwf	pinMode@pin^0,c
   588  007962  0E00               	movlw	0
   589  007964  6E04               	movwf	(pinMode@type+1)^0,c
   590  007966  0E00               	movlw	0
   591  007968  6E03               	movwf	pinMode@type^0,c
   592  00796A  ECD9  F03E         	call	_pinMode	;wreg free
   593  00796E  0012               	return		;funcret
   594  007970                     __end_of_soInit:
   595                           	callstack 0
   596                           
   597 ;; *************** function _pinMode *****************
   598 ;; Defined at:
   599 ;;		line 54 in file "io.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  pin             2    0[COMRAM] int 
   602 ;;  type            2    2[COMRAM] int 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   614 ;;      Params:         4       0       0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0
   616 ;;      Temps:          2       0       0       0       0       0       0
   617 ;;      Totals:         6       0       0       0       0       0       0
   618 ;;Total ram usage:        6 bytes
   619 ;; Hardware stack levels used: 1
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_lcdInit
   624 ;;		_soInit
   625 ;; This function uses a non-reentrant model
   626 ;;
   627                           
   628                           	psect	text4
   629  007DB2                     __ptext4:
   630                           	callstack 0
   631  007DB2                     _pinMode:
   632                           	callstack 27
   633  007DB2                     
   634                           ;io.c: 56:     if(pin <8){
   635  007DB2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
   636  007DB4  EFE7  F03E         	goto	u760
   637  007DB8  5002               	movf	(pinMode@pin+1)^0,w,c
   638  007DBA  E107               	bnz	u761
   639  007DBC  0E08               	movlw	8
   640  007DBE  5C01               	subwf	pinMode@pin^0,w,c
   641  007DC0  B0D8               	btfsc	status,0,c
   642  007DC2  EFE5  F03E         	goto	u761
   643  007DC6  EFE7  F03E         	goto	u760
   644  007DCA                     u761:
   645  007DCA  EF11  F03F         	goto	l1146
   646  007DCE                     u760:
   647  007DCE                     
   648                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
   649  007DCE  5003               	movf	pinMode@type^0,w,c
   650  007DD0  1004               	iorwf	(pinMode@type+1)^0,w,c
   651  007DD2  B4D8               	btfsc	status,2,c
   652  007DD4  EFEE  F03E         	goto	u771
   653  007DD8  EFF0  F03E         	goto	u770
   654  007DDC                     u771:
   655  007DDC  EF00  F03F         	goto	l1144
   656  007DE0                     u770:
   657  007DE0  C001  F005         	movff	pinMode@pin,??_pinMode
   658  007DE4  0E01               	movlw	1
   659  007DE6  6E06               	movwf	(??_pinMode+1)^0,c
   660  007DE8  2A05               	incf	??_pinMode^0,f,c
   661  007DEA  EFF9  F03E         	goto	u784
   662  007DEE                     u785:
   663  007DEE  90D8               	bcf	status,0,c
   664  007DF0  3606               	rlcf	(??_pinMode+1)^0,f,c
   665  007DF2                     u784:
   666  007DF2  2E05               	decfsz	??_pinMode^0,f,c
   667  007DF4  EFF7  F03E         	goto	u785
   668  007DF8  5006               	movf	(??_pinMode+1)^0,w,c
   669  007DFA  1292               	iorwf	146,f,c	;volatile
   670  007DFC  EFFF  F03F         	goto	l76
   671  007E00                     l1144:
   672  007E00  C001  F005         	movff	pinMode@pin,??_pinMode
   673  007E04  0E01               	movlw	1
   674  007E06  6E06               	movwf	(??_pinMode+1)^0,c
   675  007E08  2A05               	incf	??_pinMode^0,f,c
   676  007E0A  EF09  F03F         	goto	u794
   677  007E0E                     u795:
   678  007E0E  90D8               	bcf	status,0,c
   679  007E10  3606               	rlcf	(??_pinMode+1)^0,f,c
   680  007E12                     u794:
   681  007E12  2E05               	decfsz	??_pinMode^0,f,c
   682  007E14  EF07  F03F         	goto	u795
   683  007E18  5006               	movf	(??_pinMode+1)^0,w,c
   684  007E1A  0AFF               	xorlw	255
   685  007E1C  1692               	andwf	146,f,c	;volatile
   686  007E1E  EFFF  F03F         	goto	l76
   687  007E22                     l1146:
   688  007E22  BE02               	btfsc	(pinMode@pin+1)^0,7,c
   689  007E24  EF1F  F03F         	goto	u800
   690  007E28  5002               	movf	(pinMode@pin+1)^0,w,c
   691  007E2A  E107               	bnz	u801
   692  007E2C  0E10               	movlw	16
   693  007E2E  5C01               	subwf	pinMode@pin^0,w,c
   694  007E30  B0D8               	btfsc	status,0,c
   695  007E32  EF1D  F03F         	goto	u801
   696  007E36  EF1F  F03F         	goto	u800
   697  007E3A                     u801:
   698  007E3A  EF4D  F03F         	goto	l1154
   699  007E3E                     u800:
   700  007E3E                     
   701                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
   702  007E3E  5003               	movf	pinMode@type^0,w,c
   703  007E40  1004               	iorwf	(pinMode@type+1)^0,w,c
   704  007E42  B4D8               	btfsc	status,2,c
   705  007E44  EF26  F03F         	goto	u811
   706  007E48  EF28  F03F         	goto	u810
   707  007E4C                     u811:
   708  007E4C  EF3A  F03F         	goto	l1152
   709  007E50                     u810:
   710  007E50  C001  F005         	movff	pinMode@pin,??_pinMode
   711  007E54  0EF8               	movlw	-8
   712  007E56  2605               	addwf	??_pinMode^0,f,c
   713  007E58  0E01               	movlw	1
   714  007E5A  6E06               	movwf	(??_pinMode+1)^0,c
   715  007E5C  2A05               	incf	??_pinMode^0,f,c
   716  007E5E  EF33  F03F         	goto	u824
   717  007E62                     u825:
   718  007E62  90D8               	bcf	status,0,c
   719  007E64  3606               	rlcf	(??_pinMode+1)^0,f,c
   720  007E66                     u824:
   721  007E66  2E05               	decfsz	??_pinMode^0,f,c
   722  007E68  EF31  F03F         	goto	u825
   723  007E6C  5006               	movf	(??_pinMode+1)^0,w,c
   724  007E6E  1293               	iorwf	147,f,c	;volatile
   725  007E70  EFFF  F03F         	goto	l76
   726  007E74                     l1152:
   727  007E74  C001  F005         	movff	pinMode@pin,??_pinMode
   728  007E78  0EF8               	movlw	-8
   729  007E7A  2605               	addwf	??_pinMode^0,f,c
   730  007E7C  0E01               	movlw	1
   731  007E7E  6E06               	movwf	(??_pinMode+1)^0,c
   732  007E80  2A05               	incf	??_pinMode^0,f,c
   733  007E82  EF45  F03F         	goto	u834
   734  007E86                     u835:
   735  007E86  90D8               	bcf	status,0,c
   736  007E88  3606               	rlcf	(??_pinMode+1)^0,f,c
   737  007E8A                     u834:
   738  007E8A  2E05               	decfsz	??_pinMode^0,f,c
   739  007E8C  EF43  F03F         	goto	u835
   740  007E90  5006               	movf	(??_pinMode+1)^0,w,c
   741  007E92  0AFF               	xorlw	255
   742  007E94  1693               	andwf	147,f,c	;volatile
   743  007E96  EFFF  F03F         	goto	l76
   744  007E9A                     l1154:
   745  007E9A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
   746  007E9C  EF5B  F03F         	goto	u840
   747  007EA0  5002               	movf	(pinMode@pin+1)^0,w,c
   748  007EA2  E107               	bnz	u841
   749  007EA4  0E18               	movlw	24
   750  007EA6  5C01               	subwf	pinMode@pin^0,w,c
   751  007EA8  B0D8               	btfsc	status,0,c
   752  007EAA  EF59  F03F         	goto	u841
   753  007EAE  EF5B  F03F         	goto	u840
   754  007EB2                     u841:
   755  007EB2  EF89  F03F         	goto	l1162
   756  007EB6                     u840:
   757  007EB6                     
   758                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
   759  007EB6  5003               	movf	pinMode@type^0,w,c
   760  007EB8  1004               	iorwf	(pinMode@type+1)^0,w,c
   761  007EBA  B4D8               	btfsc	status,2,c
   762  007EBC  EF62  F03F         	goto	u851
   763  007EC0  EF64  F03F         	goto	u850
   764  007EC4                     u851:
   765  007EC4  EF76  F03F         	goto	l1160
   766  007EC8                     u850:
   767  007EC8  C001  F005         	movff	pinMode@pin,??_pinMode
   768  007ECC  0EF0               	movlw	-16
   769  007ECE  2605               	addwf	??_pinMode^0,f,c
   770  007ED0  0E01               	movlw	1
   771  007ED2  6E06               	movwf	(??_pinMode+1)^0,c
   772  007ED4  2A05               	incf	??_pinMode^0,f,c
   773  007ED6  EF6F  F03F         	goto	u864
   774  007EDA                     u865:
   775  007EDA  90D8               	bcf	status,0,c
   776  007EDC  3606               	rlcf	(??_pinMode+1)^0,f,c
   777  007EDE                     u864:
   778  007EDE  2E05               	decfsz	??_pinMode^0,f,c
   779  007EE0  EF6D  F03F         	goto	u865
   780  007EE4  5006               	movf	(??_pinMode+1)^0,w,c
   781  007EE6  1294               	iorwf	148,f,c	;volatile
   782  007EE8  EFFF  F03F         	goto	l76
   783  007EEC                     l1160:
   784  007EEC  C001  F005         	movff	pinMode@pin,??_pinMode
   785  007EF0  0EF0               	movlw	-16
   786  007EF2  2605               	addwf	??_pinMode^0,f,c
   787  007EF4  0E01               	movlw	1
   788  007EF6  6E06               	movwf	(??_pinMode+1)^0,c
   789  007EF8  2A05               	incf	??_pinMode^0,f,c
   790  007EFA  EF81  F03F         	goto	u874
   791  007EFE                     u875:
   792  007EFE  90D8               	bcf	status,0,c
   793  007F00  3606               	rlcf	(??_pinMode+1)^0,f,c
   794  007F02                     u874:
   795  007F02  2E05               	decfsz	??_pinMode^0,f,c
   796  007F04  EF7F  F03F         	goto	u875
   797  007F08  5006               	movf	(??_pinMode+1)^0,w,c
   798  007F0A  0AFF               	xorlw	255
   799  007F0C  1694               	andwf	148,f,c	;volatile
   800  007F0E  EFFF  F03F         	goto	l76
   801  007F12                     l1162:
   802  007F12  BE02               	btfsc	(pinMode@pin+1)^0,7,c
   803  007F14  EF97  F03F         	goto	u880
   804  007F18  5002               	movf	(pinMode@pin+1)^0,w,c
   805  007F1A  E107               	bnz	u881
   806  007F1C  0E20               	movlw	32
   807  007F1E  5C01               	subwf	pinMode@pin^0,w,c
   808  007F20  B0D8               	btfsc	status,0,c
   809  007F22  EF95  F03F         	goto	u881
   810  007F26  EF97  F03F         	goto	u880
   811  007F2A                     u881:
   812  007F2A  EFC5  F03F         	goto	l1170
   813  007F2E                     u880:
   814  007F2E                     
   815                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
   816  007F2E  5003               	movf	pinMode@type^0,w,c
   817  007F30  1004               	iorwf	(pinMode@type+1)^0,w,c
   818  007F32  B4D8               	btfsc	status,2,c
   819  007F34  EF9E  F03F         	goto	u891
   820  007F38  EFA0  F03F         	goto	u890
   821  007F3C                     u891:
   822  007F3C  EFB2  F03F         	goto	l1168
   823  007F40                     u890:
   824  007F40  C001  F005         	movff	pinMode@pin,??_pinMode
   825  007F44  0EE8               	movlw	-24
   826  007F46  2605               	addwf	??_pinMode^0,f,c
   827  007F48  0E01               	movlw	1
   828  007F4A  6E06               	movwf	(??_pinMode+1)^0,c
   829  007F4C  2A05               	incf	??_pinMode^0,f,c
   830  007F4E  EFAB  F03F         	goto	u904
   831  007F52                     u905:
   832  007F52  90D8               	bcf	status,0,c
   833  007F54  3606               	rlcf	(??_pinMode+1)^0,f,c
   834  007F56                     u904:
   835  007F56  2E05               	decfsz	??_pinMode^0,f,c
   836  007F58  EFA9  F03F         	goto	u905
   837  007F5C  5006               	movf	(??_pinMode+1)^0,w,c
   838  007F5E  1295               	iorwf	149,f,c	;volatile
   839  007F60  EFFF  F03F         	goto	l76
   840  007F64                     l1168:
   841  007F64  C001  F005         	movff	pinMode@pin,??_pinMode
   842  007F68  0EE8               	movlw	-24
   843  007F6A  2605               	addwf	??_pinMode^0,f,c
   844  007F6C  0E01               	movlw	1
   845  007F6E  6E06               	movwf	(??_pinMode+1)^0,c
   846  007F70  2A05               	incf	??_pinMode^0,f,c
   847  007F72  EFBD  F03F         	goto	u914
   848  007F76                     u915:
   849  007F76  90D8               	bcf	status,0,c
   850  007F78  3606               	rlcf	(??_pinMode+1)^0,f,c
   851  007F7A                     u914:
   852  007F7A  2E05               	decfsz	??_pinMode^0,f,c
   853  007F7C  EFBB  F03F         	goto	u915
   854  007F80  5006               	movf	(??_pinMode+1)^0,w,c
   855  007F82  0AFF               	xorlw	255
   856  007F84  1695               	andwf	149,f,c	;volatile
   857  007F86  EFFF  F03F         	goto	l76
   858  007F8A                     l1170:
   859  007F8A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
   860  007F8C  EFD3  F03F         	goto	u920
   861  007F90  5002               	movf	(pinMode@pin+1)^0,w,c
   862  007F92  E107               	bnz	u921
   863  007F94  0E28               	movlw	40
   864  007F96  5C01               	subwf	pinMode@pin^0,w,c
   865  007F98  B0D8               	btfsc	status,0,c
   866  007F9A  EFD1  F03F         	goto	u921
   867  007F9E  EFD3  F03F         	goto	u920
   868  007FA2                     u921:
   869  007FA2  EFFF  F03F         	goto	l76
   870  007FA6                     u920:
   871  007FA6                     
   872                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
   873  007FA6  5003               	movf	pinMode@type^0,w,c
   874  007FA8  1004               	iorwf	(pinMode@type+1)^0,w,c
   875  007FAA  B4D8               	btfsc	status,2,c
   876  007FAC  EFDA  F03F         	goto	u931
   877  007FB0  EFDC  F03F         	goto	u930
   878  007FB4                     u931:
   879  007FB4  EFEE  F03F         	goto	l1176
   880  007FB8                     u930:
   881  007FB8  C001  F005         	movff	pinMode@pin,??_pinMode
   882  007FBC  0EE0               	movlw	-32
   883  007FBE  2605               	addwf	??_pinMode^0,f,c
   884  007FC0  0E01               	movlw	1
   885  007FC2  6E06               	movwf	(??_pinMode+1)^0,c
   886  007FC4  2A05               	incf	??_pinMode^0,f,c
   887  007FC6  EFE7  F03F         	goto	u944
   888  007FCA                     u945:
   889  007FCA  90D8               	bcf	status,0,c
   890  007FCC  3606               	rlcf	(??_pinMode+1)^0,f,c
   891  007FCE                     u944:
   892  007FCE  2E05               	decfsz	??_pinMode^0,f,c
   893  007FD0  EFE5  F03F         	goto	u945
   894  007FD4  5006               	movf	(??_pinMode+1)^0,w,c
   895  007FD6  1296               	iorwf	150,f,c	;volatile
   896  007FD8  EFFF  F03F         	goto	l76
   897  007FDC                     l1176:
   898  007FDC  C001  F005         	movff	pinMode@pin,??_pinMode
   899  007FE0  0EE0               	movlw	-32
   900  007FE2  2605               	addwf	??_pinMode^0,f,c
   901  007FE4  0E01               	movlw	1
   902  007FE6  6E06               	movwf	(??_pinMode+1)^0,c
   903  007FE8  2A05               	incf	??_pinMode^0,f,c
   904  007FEA  EFF9  F03F         	goto	u954
   905  007FEE                     u955:
   906  007FEE  90D8               	bcf	status,0,c
   907  007FF0  3606               	rlcf	(??_pinMode+1)^0,f,c
   908  007FF2                     u954:
   909  007FF2  2E05               	decfsz	??_pinMode^0,f,c
   910  007FF4  EFF7  F03F         	goto	u955
   911  007FF8  5006               	movf	(??_pinMode+1)^0,w,c
   912  007FFA  0AFF               	xorlw	255
   913  007FFC  1696               	andwf	150,f,c	;volatile
   914  007FFE                     l76:
   915  007FFE  0012               	return		;funcret
   916  008000                     __end_of_pinMode:
   917                           	callstack 0
   918                           
   919 ;; *************** function _pushNibble *****************
   920 ;; Defined at:
   921 ;;		line 25 in file "lcd.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  value           1    wreg     unsigned char 
   924 ;;  rs              2    9[COMRAM] int 
   925 ;; Auto vars:     Size  Location     Type
   926 ;;  value           1   11[COMRAM] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  1    wreg      void 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0, cstack
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   936 ;;      Params:         2       0       0       0       0       0       0
   937 ;;      Locals:         1       0       0       0       0       0       0
   938 ;;      Temps:          0       0       0       0       0       0       0
   939 ;;      Totals:         3       0       0       0       0       0       0
   940 ;;Total ram usage:        3 bytes
   941 ;; Hardware stack levels used: 1
   942 ;; Hardware stack levels required when called: 3
   943 ;; This function calls:
   944 ;;		_digitalWrite
   945 ;;		_pulseEnablePin
   946 ;;		_soWrite
   947 ;; This function is called by:
   948 ;;		_lcdInit
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text5
   953  00783C                     __ptext5:
   954                           	callstack 0
   955  00783C                     _pushNibble:
   956                           	callstack 25
   957                           
   958                           ;incstack = 0
   959                           ;pushNibble@value stored from wreg
   960  00783C  6E0C               	movwf	pushNibble@value^0,c
   961  00783E                     
   962                           ;lcd.c: 26:  soWrite(value);
   963  00783E  C00C  F007         	movff	pushNibble@value,soWrite@value
   964  007842  6A08               	clrf	(soWrite@value+1)^0,c
   965  007844  ECD9  F03C         	call	_soWrite	;wreg free
   966                           
   967                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
   968  007848  0E00               	movlw	0
   969  00784A  6E02               	movwf	(digitalWrite@pin+1)^0,c
   970  00784C  0E1D               	movlw	29
   971  00784E  6E01               	movwf	digitalWrite@pin^0,c
   972  007850  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
   973  007854  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
   974  007858  ECB2  F03D         	call	_digitalWrite	;wreg free
   975                           
   976                           ;lcd.c: 28:  pulseEnablePin();
   977  00785C  ECB8  F03C         	call	_pulseEnablePin	;wreg free
   978  007860  0012               	return		;funcret
   979  007862                     __end_of_pushNibble:
   980                           	callstack 0
   981                           
   982 ;; *************** function _lcdCommand *****************
   983 ;; Defined at:
   984 ;;		line 40 in file "lcd.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  value           1    wreg     unsigned char 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  value           1   13[COMRAM] unsigned char 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   998 ;;      Params:         0       0       0       0       0       0       0
   999 ;;      Locals:         1       0       0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0
  1001 ;;      Totals:         1       0       0       0       0       0       0
  1002 ;;Total ram usage:        1 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; Hardware stack levels required when called: 4
  1005 ;; This function calls:
  1006 ;;		_delayMili
  1007 ;;		_pushByte
  1008 ;; This function is called by:
  1009 ;;		_lcdInit
  1010 ;;		_printf
  1011 ;;		_lcdPosition
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text6
  1016  00781E                     __ptext6:
  1017                           	callstack 0
  1018  00781E                     _lcdCommand:
  1019                           	callstack 24
  1020                           
  1021                           ;incstack = 0
  1022                           ;lcdCommand@value stored from wreg
  1023  00781E  6E0E               	movwf	lcdCommand@value^0,c
  1024  007820                     
  1025                           ;lcd.c: 41:  pushByte(value, 0);
  1026  007820  0E00               	movlw	0
  1027  007822  6E0B               	movwf	(pushByte@rs+1)^0,c
  1028  007824  0E00               	movlw	0
  1029  007826  6E0A               	movwf	pushByte@rs^0,c
  1030  007828  500E               	movf	lcdCommand@value^0,w,c
  1031  00782A  EC2B  F03D         	call	_pushByte
  1032                           
  1033                           ;lcd.c: 42:  delayMili(2);
  1034  00782E  0E00               	movlw	0
  1035  007830  6E02               	movwf	(delayMili@a+1)^0,c
  1036  007832  0E02               	movlw	2
  1037  007834  6E01               	movwf	delayMili@a^0,c
  1038  007836  EC81  F03C         	call	_delayMili	;wreg free
  1039  00783A  0012               	return		;funcret
  1040  00783C                     __end_of_lcdCommand:
  1041                           	callstack 0
  1042                           
  1043 ;; *************** function _delayMili *****************
  1044 ;; Defined at:
  1045 ;;		line 10 in file "lcd.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  a               2    0[COMRAM] int 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  i               2    3[COMRAM] volatile int 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1059 ;;      Params:         2       0       0       0       0       0       0
  1060 ;;      Locals:         2       0       0       0       0       0       0
  1061 ;;      Temps:          1       0       0       0       0       0       0
  1062 ;;      Totals:         5       0       0       0       0       0       0
  1063 ;;Total ram usage:        5 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_lcdCommand
  1069 ;;		_lcdInit
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text7
  1074  007902                     __ptext7:
  1075                           	callstack 0
  1076  007902                     _delayMili:
  1077                           	callstack 27
  1078  007902                     
  1079                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  1080  007902  0E00               	movlw	0
  1081  007904  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  1082  007906  0E00               	movlw	0
  1083  007908  6E04               	movwf	delayMili@i^0,c	;volatile
  1084  00790A  EF89  F03C         	goto	l1182
  1085  00790E                     l1180:
  1086                           
  1087                           ;lcd.c: 15:  }
  1088  00790E  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  1089  007910  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  1090  007912                     l1182:
  1091  007912  5001               	movf	delayMili@a^0,w,c
  1092  007914  5C04               	subwf	delayMili@i^0,w,c	;volatile
  1093  007916  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  1094  007918  0A80               	xorlw	128
  1095  00791A  6E03               	movwf	??_delayMili^0,c
  1096  00791C  5002               	movf	(delayMili@a+1)^0,w,c
  1097  00791E  0A80               	xorlw	128
  1098  007920  5803               	subwfb	??_delayMili^0,w,c
  1099  007922  A0D8               	btfss	status,0,c
  1100  007924  EF96  F03C         	goto	u961
  1101  007928  EF98  F03C         	goto	u960
  1102  00792C                     u961:
  1103  00792C  EF87  F03C         	goto	l1180
  1104  007930                     u960:
  1105  007930  0012               	return		;funcret
  1106  007932                     __end_of_delayMili:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _lcdChar *****************
  1110 ;; Defined at:
  1111 ;;		line 52 in file "lcd.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  value           1    wreg     unsigned char 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  value           1   13[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1125 ;;      Params:         0       0       0       0       0       0       0
  1126 ;;      Locals:         1       0       0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0
  1128 ;;      Totals:         1       0       0       0       0       0       0
  1129 ;;Total ram usage:        1 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 4
  1132 ;; This function calls:
  1133 ;;		_delayMicro
  1134 ;;		_pushByte
  1135 ;; This function is called by:
  1136 ;;		_printf
  1137 ;;		_lcdString
  1138 ;;		_lcdNumber
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text8
  1143  007800                     __ptext8:
  1144                           	callstack 0
  1145  007800                     _lcdChar:
  1146                           	callstack 25
  1147                           
  1148                           ;incstack = 0
  1149                           ;lcdChar@value stored from wreg
  1150  007800  6E0E               	movwf	lcdChar@value^0,c
  1151  007802                     
  1152                           ;lcd.c: 53:  pushByte(value, 1);
  1153  007802  0E00               	movlw	0
  1154  007804  6E0B               	movwf	(pushByte@rs+1)^0,c
  1155  007806  0E01               	movlw	1
  1156  007808  6E0A               	movwf	pushByte@rs^0,c
  1157  00780A  500E               	movf	lcdChar@value^0,w,c
  1158  00780C  EC2B  F03D         	call	_pushByte
  1159  007810                     
  1160                           ;lcd.c: 54:  delayMicro(80);
  1161  007810  0E00               	movlw	0
  1162  007812  6E02               	movwf	(delayMicro@a+1)^0,c
  1163  007814  0E50               	movlw	80
  1164  007816  6E01               	movwf	delayMicro@a^0,c
  1165  007818  ECF7  F03B         	call	_delayMicro	;wreg free
  1166  00781C  0012               	return		;funcret
  1167  00781E                     __end_of_lcdChar:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _pushByte *****************
  1171 ;; Defined at:
  1172 ;;		line 31 in file "lcd.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  value           1    wreg     unsigned char 
  1175 ;;  rs              2    9[COMRAM] int 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  value           1   12[COMRAM] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1187 ;;      Params:         2       0       0       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0       0       0
  1189 ;;      Temps:          1       0       0       0       0       0       0
  1190 ;;      Totals:         4       0       0       0       0       0       0
  1191 ;;Total ram usage:        4 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 3
  1194 ;; This function calls:
  1195 ;;		_digitalWrite
  1196 ;;		_pulseEnablePin
  1197 ;;		_soWrite
  1198 ;; This function is called by:
  1199 ;;		_lcdCommand
  1200 ;;		_lcdChar
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text9
  1205  007A56                     __ptext9:
  1206                           	callstack 0
  1207  007A56                     _pushByte:
  1208                           	callstack 24
  1209                           
  1210                           ;incstack = 0
  1211                           ;pushByte@value stored from wreg
  1212  007A56  6E0D               	movwf	pushByte@value^0,c
  1213  007A58                     
  1214                           ;lcd.c: 32:  soWrite(value >> 4);
  1215  007A58  C00D  F00C         	movff	pushByte@value,??_pushByte
  1216  007A5C  3A0C               	swapf	??_pushByte^0,f,c
  1217  007A5E  0E0F               	movlw	15
  1218  007A60  160C               	andwf	??_pushByte^0,f,c
  1219  007A62  500C               	movf	??_pushByte^0,w,c
  1220  007A64  6E07               	movwf	soWrite@value^0,c
  1221  007A66  6A08               	clrf	(soWrite@value+1)^0,c
  1222  007A68  ECD9  F03C         	call	_soWrite	;wreg free
  1223                           
  1224                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  1225  007A6C  0E00               	movlw	0
  1226  007A6E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1227  007A70  0E1D               	movlw	29
  1228  007A72  6E01               	movwf	digitalWrite@pin^0,c
  1229  007A74  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  1230  007A78  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  1231  007A7C  ECB2  F03D         	call	_digitalWrite	;wreg free
  1232                           
  1233                           ;lcd.c: 34:  pulseEnablePin();
  1234  007A80  ECB8  F03C         	call	_pulseEnablePin	;wreg free
  1235                           
  1236                           ;lcd.c: 36:  soWrite(value & 0x0F);
  1237  007A84  C00D  F00C         	movff	pushByte@value,??_pushByte
  1238  007A88  0E0F               	movlw	15
  1239  007A8A  160C               	andwf	??_pushByte^0,f,c
  1240  007A8C  500C               	movf	??_pushByte^0,w,c
  1241  007A8E  6E07               	movwf	soWrite@value^0,c
  1242  007A90  6A08               	clrf	(soWrite@value+1)^0,c
  1243  007A92  ECD9  F03C         	call	_soWrite	;wreg free
  1244                           
  1245                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  1246  007A96  0E00               	movlw	0
  1247  007A98  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1248  007A9A  0E1D               	movlw	29
  1249  007A9C  6E01               	movwf	digitalWrite@pin^0,c
  1250  007A9E  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  1251  007AA2  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  1252  007AA6  ECB2  F03D         	call	_digitalWrite	;wreg free
  1253                           
  1254                           ;lcd.c: 38:  pulseEnablePin();
  1255  007AAA  ECB8  F03C         	call	_pulseEnablePin	;wreg free
  1256  007AAE  0012               	return		;funcret
  1257  007AB0                     __end_of_pushByte:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _soWrite *****************
  1261 ;; Defined at:
  1262 ;;		line 18 in file "so.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  value           2    6[COMRAM] int 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  i               1    8[COMRAM] unsigned char 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1276 ;;      Params:         2       0       0       0       0       0       0
  1277 ;;      Locals:         1       0       0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0
  1279 ;;      Totals:         3       0       0       0       0       0       0
  1280 ;;Total ram usage:        3 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 2
  1283 ;; This function calls:
  1284 ;;		_PulseClockData
  1285 ;;		_PulseEnClock
  1286 ;;		_digitalWrite
  1287 ;; This function is called by:
  1288 ;;		_pushNibble
  1289 ;;		_pushByte
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text10
  1294  0079B2                     __ptext10:
  1295                           	callstack 0
  1296  0079B2                     _soWrite:
  1297                           	callstack 25
  1298  0079B2                     
  1299                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  1300  0079B2  0E00               	movlw	0
  1301  0079B4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1302  0079B6  0E08               	movlw	8
  1303  0079B8  6E01               	movwf	digitalWrite@pin^0,c
  1304  0079BA  0E00               	movlw	0
  1305  0079BC  6E04               	movwf	(digitalWrite@value+1)^0,c
  1306  0079BE  0E00               	movlw	0
  1307  0079C0  6E03               	movwf	digitalWrite@value^0,c
  1308  0079C2  ECB2  F03D         	call	_digitalWrite	;wreg free
  1309  0079C6                     
  1310                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  1311  0079C6  0E00               	movlw	0
  1312  0079C8  6E09               	movwf	soWrite@i^0,c
  1313  0079CA                     l1128:
  1314                           
  1315                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  1316  0079CA  0E00               	movlw	0
  1317  0079CC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1318  0079CE  0E1E               	movlw	30
  1319  0079D0  6E01               	movwf	digitalWrite@pin^0,c
  1320  0079D2  0E80               	movlw	128
  1321  0079D4  1407               	andwf	soWrite@value^0,w,c
  1322  0079D6  6E03               	movwf	digitalWrite@value^0,c
  1323  0079D8  6A04               	clrf	(digitalWrite@value+1)^0,c
  1324  0079DA  ECB2  F03D         	call	_digitalWrite	;wreg free
  1325                           
  1326                           ;so.c: 23:   PulseClockData();
  1327  0079DE  EC57  F03C         	call	_PulseClockData	;wreg free
  1328  0079E2                     
  1329                           ;so.c: 24:   value <<= 1;
  1330  0079E2  90D8               	bcf	status,0,c
  1331  0079E4  3607               	rlcf	soWrite@value^0,f,c
  1332  0079E6  3608               	rlcf	(soWrite@value+1)^0,f,c
  1333  0079E8                     
  1334                           ;so.c: 25:  }
  1335  0079E8  2A09               	incf	soWrite@i^0,f,c
  1336  0079EA  0E07               	movlw	7
  1337  0079EC  6409               	cpfsgt	soWrite@i^0,c
  1338  0079EE  EFFB  F03C         	goto	u751
  1339  0079F2  EFFD  F03C         	goto	u750
  1340  0079F6                     u751:
  1341  0079F6  EFE5  F03C         	goto	l1128
  1342  0079FA                     u750:
  1343  0079FA                     
  1344                           ;so.c: 26:  PulseEnClock();
  1345  0079FA  EC6C  F03C         	call	_PulseEnClock	;wreg free
  1346  0079FE  0012               	return		;funcret
  1347  007A00                     __end_of_soWrite:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _PulseEnClock *****************
  1351 ;; Defined at:
  1352 ;;		line 9 in file "so.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1366 ;;      Params:         0       0       0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 1
  1373 ;; This function calls:
  1374 ;;		_digitalWrite
  1375 ;; This function is called by:
  1376 ;;		_soWrite
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text11
  1381  0078D8                     __ptext11:
  1382                           	callstack 0
  1383  0078D8                     _PulseEnClock:
  1384                           	callstack 25
  1385  0078D8                     
  1386                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  1387  0078D8  0E00               	movlw	0
  1388  0078DA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1389  0078DC  0E1F               	movlw	31
  1390  0078DE  6E01               	movwf	digitalWrite@pin^0,c
  1391  0078E0  0E00               	movlw	0
  1392  0078E2  6E04               	movwf	(digitalWrite@value+1)^0,c
  1393  0078E4  0E01               	movlw	1
  1394  0078E6  6E03               	movwf	digitalWrite@value^0,c
  1395  0078E8  ECB2  F03D         	call	_digitalWrite	;wreg free
  1396                           
  1397                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  1398  0078EC  0E00               	movlw	0
  1399  0078EE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1400  0078F0  0E1F               	movlw	31
  1401  0078F2  6E01               	movwf	digitalWrite@pin^0,c
  1402  0078F4  0E00               	movlw	0
  1403  0078F6  6E04               	movwf	(digitalWrite@value+1)^0,c
  1404  0078F8  0E00               	movlw	0
  1405  0078FA  6E03               	movwf	digitalWrite@value^0,c
  1406  0078FC  ECB2  F03D         	call	_digitalWrite	;wreg free
  1407  007900  0012               	return		;funcret
  1408  007902                     __end_of_PulseEnClock:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _PulseClockData *****************
  1412 ;; Defined at:
  1413 ;;		line 14 in file "so.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1427 ;;      Params:         0       0       0       0       0       0       0
  1428 ;;      Locals:         0       0       0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0
  1430 ;;      Totals:         0       0       0       0       0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; Hardware stack levels required when called: 1
  1434 ;; This function calls:
  1435 ;;		_digitalWrite
  1436 ;; This function is called by:
  1437 ;;		_soWrite
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text12
  1442  0078AE                     __ptext12:
  1443                           	callstack 0
  1444  0078AE                     _PulseClockData:
  1445                           	callstack 25
  1446  0078AE                     
  1447                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  1448  0078AE  0E00               	movlw	0
  1449  0078B0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1450  0078B2  0E08               	movlw	8
  1451  0078B4  6E01               	movwf	digitalWrite@pin^0,c
  1452  0078B6  0E00               	movlw	0
  1453  0078B8  6E04               	movwf	(digitalWrite@value+1)^0,c
  1454  0078BA  0E01               	movlw	1
  1455  0078BC  6E03               	movwf	digitalWrite@value^0,c
  1456  0078BE  ECB2  F03D         	call	_digitalWrite	;wreg free
  1457                           
  1458                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  1459  0078C2  0E00               	movlw	0
  1460  0078C4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1461  0078C6  0E08               	movlw	8
  1462  0078C8  6E01               	movwf	digitalWrite@pin^0,c
  1463  0078CA  0E00               	movlw	0
  1464  0078CC  6E04               	movwf	(digitalWrite@value+1)^0,c
  1465  0078CE  0E00               	movlw	0
  1466  0078D0  6E03               	movwf	digitalWrite@value^0,c
  1467  0078D2  ECB2  F03D         	call	_digitalWrite	;wreg free
  1468  0078D6  0012               	return		;funcret
  1469  0078D8                     __end_of_PulseClockData:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _pulseEnablePin *****************
  1473 ;; Defined at:
  1474 ;;		line 18 in file "lcd.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1488 ;;      Params:         0       0       0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 1
  1495 ;; This function calls:
  1496 ;;		_delayMicro
  1497 ;;		_digitalWrite
  1498 ;; This function is called by:
  1499 ;;		_pushNibble
  1500 ;;		_pushByte
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text13
  1505  007970                     __ptext13:
  1506                           	callstack 0
  1507  007970                     _pulseEnablePin:
  1508                           	callstack 26
  1509  007970                     
  1510                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  1511  007970  0E00               	movlw	0
  1512  007972  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1513  007974  0E1C               	movlw	28
  1514  007976  6E01               	movwf	digitalWrite@pin^0,c
  1515  007978  0E00               	movlw	0
  1516  00797A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1517  00797C  0E01               	movlw	1
  1518  00797E  6E03               	movwf	digitalWrite@value^0,c
  1519  007980  ECB2  F03D         	call	_digitalWrite	;wreg free
  1520  007984                     
  1521                           ;lcd.c: 20:  delayMicro(5);
  1522  007984  0E00               	movlw	0
  1523  007986  6E02               	movwf	(delayMicro@a+1)^0,c
  1524  007988  0E05               	movlw	5
  1525  00798A  6E01               	movwf	delayMicro@a^0,c
  1526  00798C  ECF7  F03B         	call	_delayMicro	;wreg free
  1527  007990                     
  1528                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  1529  007990  0E00               	movlw	0
  1530  007992  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1531  007994  0E1C               	movlw	28
  1532  007996  6E01               	movwf	digitalWrite@pin^0,c
  1533  007998  0E00               	movlw	0
  1534  00799A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1535  00799C  0E00               	movlw	0
  1536  00799E  6E03               	movwf	digitalWrite@value^0,c
  1537  0079A0  ECB2  F03D         	call	_digitalWrite	;wreg free
  1538                           
  1539                           ;lcd.c: 22:  delayMicro(5);
  1540  0079A4  0E00               	movlw	0
  1541  0079A6  6E02               	movwf	(delayMicro@a+1)^0,c
  1542  0079A8  0E05               	movlw	5
  1543  0079AA  6E01               	movwf	delayMicro@a^0,c
  1544  0079AC  ECF7  F03B         	call	_delayMicro	;wreg free
  1545  0079B0  0012               	return		;funcret
  1546  0079B2                     __end_of_pulseEnablePin:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _digitalWrite *****************
  1550 ;; Defined at:
  1551 ;;		line 14 in file "io.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  pin             2    0[COMRAM] int 
  1554 ;;  value           2    2[COMRAM] int 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1566 ;;      Params:         4       0       0       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0       0       0
  1568 ;;      Temps:          2       0       0       0       0       0       0
  1569 ;;      Totals:         6       0       0       0       0       0       0
  1570 ;;Total ram usage:        6 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_pulseEnablePin
  1576 ;;		_pushNibble
  1577 ;;		_pushByte
  1578 ;;		_PulseEnClock
  1579 ;;		_PulseClockData
  1580 ;;		_soWrite
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text14
  1585  007B64                     __ptext14:
  1586                           	callstack 0
  1587  007B64                     _digitalWrite:
  1588                           	callstack 26
  1589  007B64                     
  1590                           ;io.c: 16:     if(pin <8){
  1591  007B64  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  1592  007B66  EFC0  F03D         	goto	u550
  1593  007B6A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  1594  007B6C  E107               	bnz	u551
  1595  007B6E  0E08               	movlw	8
  1596  007B70  5C01               	subwf	digitalWrite@pin^0,w,c
  1597  007B72  B0D8               	btfsc	status,0,c
  1598  007B74  EFBE  F03D         	goto	u551
  1599  007B78  EFC0  F03D         	goto	u550
  1600  007B7C                     u551:
  1601  007B7C  EFEA  F03D         	goto	l1078
  1602  007B80                     u550:
  1603  007B80                     
  1604                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  1605  007B80  5003               	movf	digitalWrite@value^0,w,c
  1606  007B82  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  1607  007B84  B4D8               	btfsc	status,2,c
  1608  007B86  EFC7  F03D         	goto	u561
  1609  007B8A  EFC9  F03D         	goto	u560
  1610  007B8E                     u561:
  1611  007B8E  EFD9  F03D         	goto	l1076
  1612  007B92                     u560:
  1613  007B92  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1614  007B96  0E01               	movlw	1
  1615  007B98  6E06               	movwf	(??_digitalWrite+1)^0,c
  1616  007B9A  2A05               	incf	??_digitalWrite^0,f,c
  1617  007B9C  EFD2  F03D         	goto	u574
  1618  007BA0                     u575:
  1619  007BA0  90D8               	bcf	status,0,c
  1620  007BA2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  1621  007BA4                     u574:
  1622  007BA4  2E05               	decfsz	??_digitalWrite^0,f,c
  1623  007BA6  EFD0  F03D         	goto	u575
  1624  007BAA  5006               	movf	(??_digitalWrite+1)^0,w,c
  1625  007BAC  1280               	iorwf	128,f,c	;volatile
  1626  007BAE  EFD8  F03E         	goto	l42
  1627  007BB2                     l1076:
  1628  007BB2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1629  007BB6  0E01               	movlw	1
  1630  007BB8  6E06               	movwf	(??_digitalWrite+1)^0,c
  1631  007BBA  2A05               	incf	??_digitalWrite^0,f,c
  1632  007BBC  EFE2  F03D         	goto	u584
  1633  007BC0                     u585:
  1634  007BC0  90D8               	bcf	status,0,c
  1635  007BC2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  1636  007BC4                     u584:
  1637  007BC4  2E05               	decfsz	??_digitalWrite^0,f,c
  1638  007BC6  EFE0  F03D         	goto	u585
  1639  007BCA  5006               	movf	(??_digitalWrite+1)^0,w,c
  1640  007BCC  0AFF               	xorlw	255
  1641  007BCE  1680               	andwf	128,f,c	;volatile
  1642  007BD0  EFD8  F03E         	goto	l42
  1643  007BD4                     l1078:
  1644  007BD4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  1645  007BD6  EFF8  F03D         	goto	u590
  1646  007BDA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  1647  007BDC  E107               	bnz	u591
  1648  007BDE  0E10               	movlw	16
  1649  007BE0  5C01               	subwf	digitalWrite@pin^0,w,c
  1650  007BE2  B0D8               	btfsc	status,0,c
  1651  007BE4  EFF6  F03D         	goto	u591
  1652  007BE8  EFF8  F03D         	goto	u590
  1653  007BEC                     u591:
  1654  007BEC  EF26  F03E         	goto	l1086
  1655  007BF0                     u590:
  1656  007BF0                     
  1657                           ;io.c: 20:         pin -=8;
  1658  007BF0  0EF8               	movlw	248
  1659  007BF2  2601               	addwf	digitalWrite@pin^0,f,c
  1660  007BF4  0EFF               	movlw	255
  1661  007BF6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  1662                           
  1663                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  1664  007BF8  5003               	movf	digitalWrite@value^0,w,c
  1665  007BFA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  1666  007BFC  B4D8               	btfsc	status,2,c
  1667  007BFE  EF03  F03E         	goto	u601
  1668  007C02  EF05  F03E         	goto	u600
  1669  007C06                     u601:
  1670  007C06  EF15  F03E         	goto	l1084
  1671  007C0A                     u600:
  1672  007C0A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1673  007C0E  0E01               	movlw	1
  1674  007C10  6E06               	movwf	(??_digitalWrite+1)^0,c
  1675  007C12  2A05               	incf	??_digitalWrite^0,f,c
  1676  007C14  EF0E  F03E         	goto	u614
  1677  007C18                     u615:
  1678  007C18  90D8               	bcf	status,0,c
  1679  007C1A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  1680  007C1C                     u614:
  1681  007C1C  2E05               	decfsz	??_digitalWrite^0,f,c
  1682  007C1E  EF0C  F03E         	goto	u615
  1683  007C22  5006               	movf	(??_digitalWrite+1)^0,w,c
  1684  007C24  1281               	iorwf	129,f,c	;volatile
  1685  007C26  EFD8  F03E         	goto	l42
  1686  007C2A                     l1084:
  1687  007C2A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1688  007C2E  0E01               	movlw	1
  1689  007C30  6E06               	movwf	(??_digitalWrite+1)^0,c
  1690  007C32  2A05               	incf	??_digitalWrite^0,f,c
  1691  007C34  EF1E  F03E         	goto	u624
  1692  007C38                     u625:
  1693  007C38  90D8               	bcf	status,0,c
  1694  007C3A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  1695  007C3C                     u624:
  1696  007C3C  2E05               	decfsz	??_digitalWrite^0,f,c
  1697  007C3E  EF1C  F03E         	goto	u625
  1698  007C42  5006               	movf	(??_digitalWrite+1)^0,w,c
  1699  007C44  0AFF               	xorlw	255
  1700  007C46  1681               	andwf	129,f,c	;volatile
  1701  007C48  EFD8  F03E         	goto	l42
  1702  007C4C                     l1086:
  1703  007C4C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  1704  007C4E  EF34  F03E         	goto	u630
  1705  007C52  5002               	movf	(digitalWrite@pin+1)^0,w,c
  1706  007C54  E107               	bnz	u631
  1707  007C56  0E18               	movlw	24
  1708  007C58  5C01               	subwf	digitalWrite@pin^0,w,c
  1709  007C5A  B0D8               	btfsc	status,0,c
  1710  007C5C  EF32  F03E         	goto	u631
  1711  007C60  EF34  F03E         	goto	u630
  1712  007C64                     u631:
  1713  007C64  EF62  F03E         	goto	l1094
  1714  007C68                     u630:
  1715  007C68                     
  1716                           ;io.c: 24:         pin -=16;
  1717  007C68  0EF0               	movlw	240
  1718  007C6A  2601               	addwf	digitalWrite@pin^0,f,c
  1719  007C6C  0EFF               	movlw	255
  1720  007C6E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  1721                           
  1722                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  1723  007C70  5003               	movf	digitalWrite@value^0,w,c
  1724  007C72  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  1725  007C74  B4D8               	btfsc	status,2,c
  1726  007C76  EF3F  F03E         	goto	u641
  1727  007C7A  EF41  F03E         	goto	u640
  1728  007C7E                     u641:
  1729  007C7E  EF51  F03E         	goto	l1092
  1730  007C82                     u640:
  1731  007C82  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1732  007C86  0E01               	movlw	1
  1733  007C88  6E06               	movwf	(??_digitalWrite+1)^0,c
  1734  007C8A  2A05               	incf	??_digitalWrite^0,f,c
  1735  007C8C  EF4A  F03E         	goto	u654
  1736  007C90                     u655:
  1737  007C90  90D8               	bcf	status,0,c
  1738  007C92  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  1739  007C94                     u654:
  1740  007C94  2E05               	decfsz	??_digitalWrite^0,f,c
  1741  007C96  EF48  F03E         	goto	u655
  1742  007C9A  5006               	movf	(??_digitalWrite+1)^0,w,c
  1743  007C9C  1282               	iorwf	130,f,c	;volatile
  1744  007C9E  EFD8  F03E         	goto	l42
  1745  007CA2                     l1092:
  1746  007CA2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1747  007CA6  0E01               	movlw	1
  1748  007CA8  6E06               	movwf	(??_digitalWrite+1)^0,c
  1749  007CAA  2A05               	incf	??_digitalWrite^0,f,c
  1750  007CAC  EF5A  F03E         	goto	u664
  1751  007CB0                     u665:
  1752  007CB0  90D8               	bcf	status,0,c
  1753  007CB2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  1754  007CB4                     u664:
  1755  007CB4  2E05               	decfsz	??_digitalWrite^0,f,c
  1756  007CB6  EF58  F03E         	goto	u665
  1757  007CBA  5006               	movf	(??_digitalWrite+1)^0,w,c
  1758  007CBC  0AFF               	xorlw	255
  1759  007CBE  1682               	andwf	130,f,c	;volatile
  1760  007CC0  EFD8  F03E         	goto	l42
  1761  007CC4                     l1094:
  1762  007CC4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  1763  007CC6  EF70  F03E         	goto	u670
  1764  007CCA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  1765  007CCC  E107               	bnz	u671
  1766  007CCE  0E20               	movlw	32
  1767  007CD0  5C01               	subwf	digitalWrite@pin^0,w,c
  1768  007CD2  B0D8               	btfsc	status,0,c
  1769  007CD4  EF6E  F03E         	goto	u671
  1770  007CD8  EF70  F03E         	goto	u670
  1771  007CDC                     u671:
  1772  007CDC  EF9E  F03E         	goto	l1102
  1773  007CE0                     u670:
  1774  007CE0                     
  1775                           ;io.c: 28:         pin -=24;
  1776  007CE0  0EE8               	movlw	232
  1777  007CE2  2601               	addwf	digitalWrite@pin^0,f,c
  1778  007CE4  0EFF               	movlw	255
  1779  007CE6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  1780                           
  1781                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  1782  007CE8  5003               	movf	digitalWrite@value^0,w,c
  1783  007CEA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  1784  007CEC  B4D8               	btfsc	status,2,c
  1785  007CEE  EF7B  F03E         	goto	u681
  1786  007CF2  EF7D  F03E         	goto	u680
  1787  007CF6                     u681:
  1788  007CF6  EF8D  F03E         	goto	l1100
  1789  007CFA                     u680:
  1790  007CFA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1791  007CFE  0E01               	movlw	1
  1792  007D00  6E06               	movwf	(??_digitalWrite+1)^0,c
  1793  007D02  2A05               	incf	??_digitalWrite^0,f,c
  1794  007D04  EF86  F03E         	goto	u694
  1795  007D08                     u695:
  1796  007D08  90D8               	bcf	status,0,c
  1797  007D0A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  1798  007D0C                     u694:
  1799  007D0C  2E05               	decfsz	??_digitalWrite^0,f,c
  1800  007D0E  EF84  F03E         	goto	u695
  1801  007D12  5006               	movf	(??_digitalWrite+1)^0,w,c
  1802  007D14  1283               	iorwf	131,f,c	;volatile
  1803  007D16  EFD8  F03E         	goto	l42
  1804  007D1A                     l1100:
  1805  007D1A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1806  007D1E  0E01               	movlw	1
  1807  007D20  6E06               	movwf	(??_digitalWrite+1)^0,c
  1808  007D22  2A05               	incf	??_digitalWrite^0,f,c
  1809  007D24  EF96  F03E         	goto	u704
  1810  007D28                     u705:
  1811  007D28  90D8               	bcf	status,0,c
  1812  007D2A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  1813  007D2C                     u704:
  1814  007D2C  2E05               	decfsz	??_digitalWrite^0,f,c
  1815  007D2E  EF94  F03E         	goto	u705
  1816  007D32  5006               	movf	(??_digitalWrite+1)^0,w,c
  1817  007D34  0AFF               	xorlw	255
  1818  007D36  1683               	andwf	131,f,c	;volatile
  1819  007D38  EFD8  F03E         	goto	l42
  1820  007D3C                     l1102:
  1821  007D3C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  1822  007D3E  EFAC  F03E         	goto	u710
  1823  007D42  5002               	movf	(digitalWrite@pin+1)^0,w,c
  1824  007D44  E107               	bnz	u711
  1825  007D46  0E28               	movlw	40
  1826  007D48  5C01               	subwf	digitalWrite@pin^0,w,c
  1827  007D4A  B0D8               	btfsc	status,0,c
  1828  007D4C  EFAA  F03E         	goto	u711
  1829  007D50  EFAC  F03E         	goto	u710
  1830  007D54                     u711:
  1831  007D54  EFD8  F03E         	goto	l42
  1832  007D58                     u710:
  1833  007D58                     
  1834                           ;io.c: 32:         pin -=32;
  1835  007D58  0EE0               	movlw	224
  1836  007D5A  2601               	addwf	digitalWrite@pin^0,f,c
  1837  007D5C  0EFF               	movlw	255
  1838  007D5E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  1839                           
  1840                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  1841  007D60  5003               	movf	digitalWrite@value^0,w,c
  1842  007D62  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  1843  007D64  B4D8               	btfsc	status,2,c
  1844  007D66  EFB7  F03E         	goto	u721
  1845  007D6A  EFB9  F03E         	goto	u720
  1846  007D6E                     u721:
  1847  007D6E  EFC9  F03E         	goto	l1108
  1848  007D72                     u720:
  1849  007D72  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1850  007D76  0E01               	movlw	1
  1851  007D78  6E06               	movwf	(??_digitalWrite+1)^0,c
  1852  007D7A  2A05               	incf	??_digitalWrite^0,f,c
  1853  007D7C  EFC2  F03E         	goto	u734
  1854  007D80                     u735:
  1855  007D80  90D8               	bcf	status,0,c
  1856  007D82  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  1857  007D84                     u734:
  1858  007D84  2E05               	decfsz	??_digitalWrite^0,f,c
  1859  007D86  EFC0  F03E         	goto	u735
  1860  007D8A  5006               	movf	(??_digitalWrite+1)^0,w,c
  1861  007D8C  1284               	iorwf	132,f,c	;volatile
  1862  007D8E  EFD8  F03E         	goto	l42
  1863  007D92                     l1108:
  1864  007D92  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  1865  007D96  0E01               	movlw	1
  1866  007D98  6E06               	movwf	(??_digitalWrite+1)^0,c
  1867  007D9A  2A05               	incf	??_digitalWrite^0,f,c
  1868  007D9C  EFD2  F03E         	goto	u744
  1869  007DA0                     u745:
  1870  007DA0  90D8               	bcf	status,0,c
  1871  007DA2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  1872  007DA4                     u744:
  1873  007DA4  2E05               	decfsz	??_digitalWrite^0,f,c
  1874  007DA6  EFD0  F03E         	goto	u745
  1875  007DAA  5006               	movf	(??_digitalWrite+1)^0,w,c
  1876  007DAC  0AFF               	xorlw	255
  1877  007DAE  1684               	andwf	132,f,c	;volatile
  1878  007DB0                     l42:
  1879  007DB0  0012               	return		;funcret
  1880  007DB2                     __end_of_digitalWrite:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function _delayMicro *****************
  1884 ;; Defined at:
  1885 ;;		line 5 in file "lcd.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  a               2    0[COMRAM] int 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  i               2    0        volatile int 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		None
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1899 ;;      Params:         2       0       0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0
  1902 ;;      Totals:         2       0       0       0       0       0       0
  1903 ;;Total ram usage:        2 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_pulseEnablePin
  1909 ;;		_lcdChar
  1910 ;;		_lcdInit
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text15
  1915  0077EE                     __ptext15:
  1916                           	callstack 0
  1917  0077EE                     _delayMicro:
  1918                           	callstack 26
  1919  0077EE  0012               	return		;funcret
  1920  0077F0                     __end_of_delayMicro:
  1921                           	callstack 0
  1922  0000                     
  1923                           	psect	rparam
  1924  0000                     
  1925                           	psect	idloc
  1926                           
  1927                           ;Config register IDLOC0 @ 0x200000
  1928                           ;	unspecified, using default values
  1929  200000                     	org	2097152
  1930  200000  FF                 	db	255
  1931                           
  1932                           ;Config register IDLOC1 @ 0x200001
  1933                           ;	unspecified, using default values
  1934  200001                     	org	2097153
  1935  200001  FF                 	db	255
  1936                           
  1937                           ;Config register IDLOC2 @ 0x200002
  1938                           ;	unspecified, using default values
  1939  200002                     	org	2097154
  1940  200002  FF                 	db	255
  1941                           
  1942                           ;Config register IDLOC3 @ 0x200003
  1943                           ;	unspecified, using default values
  1944  200003                     	org	2097155
  1945  200003  FF                 	db	255
  1946                           
  1947                           ;Config register IDLOC4 @ 0x200004
  1948                           ;	unspecified, using default values
  1949  200004                     	org	2097156
  1950  200004  FF                 	db	255
  1951                           
  1952                           ;Config register IDLOC5 @ 0x200005
  1953                           ;	unspecified, using default values
  1954  200005                     	org	2097157
  1955  200005  FF                 	db	255
  1956                           
  1957                           ;Config register IDLOC6 @ 0x200006
  1958                           ;	unspecified, using default values
  1959  200006                     	org	2097158
  1960  200006  FF                 	db	255
  1961                           
  1962                           ;Config register IDLOC7 @ 0x200007
  1963                           ;	unspecified, using default values
  1964  200007                     	org	2097159
  1965  200007  FF                 	db	255
  1966                           
  1967                           	psect	config
  1968                           
  1969                           ; Padding undefined space
  1970  300000                     	org	3145728
  1971  300000  FF                 	db	255
  1972                           
  1973                           ;Config register CONFIG1H @ 0x300001
  1974                           ;	Oscillator Selection bits
  1975                           ;	OSC = HS, HS oscillator
  1976                           ;	Fail-Safe Clock Monitor Enable bit
  1977                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1978                           ;	Internal/External Oscillator Switchover bit
  1979                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1980  300001                     	org	3145729
  1981  300001  02                 	db	2
  1982                           
  1983                           ;Config register CONFIG2L @ 0x300002
  1984                           ;	Power-up Timer Enable bit
  1985                           ;	PWRT = OFF, PWRT disabled
  1986                           ;	Brown-out Reset Enable bits
  1987                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1988                           ;	Brown Out Reset Voltage bits
  1989                           ;	BORV = 0x2E, user specified literal
  1990  300002                     	org	3145730
  1991  300002  71                 	db	369
  1992                           
  1993                           ;Config register CONFIG2H @ 0x300003
  1994                           ;	Watchdog Timer Enable bit
  1995                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1996                           ;	Watchdog Timer Postscale Select bits
  1997                           ;	WDTPS = 1, 1:1
  1998  300003                     	org	3145731
  1999  300003  00                 	db	0
  2000                           
  2001                           ; Padding undefined space
  2002  300004                     	org	3145732
  2003  300004  FF                 	db	255
  2004                           
  2005                           ;Config register CONFIG3H @ 0x300005
  2006                           ;	CCP2 MUX bit
  2007                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2008                           ;	PORTB A/D Enable bit
  2009                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  2010                           ;	Low-Power Timer1 Oscillator Enable bit
  2011                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2012                           ;	MCLR Pin Enable bit
  2013                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2014  300005                     	org	3145733
  2015  300005  83                 	db	131
  2016                           
  2017                           ;Config register CONFIG4L @ 0x300006
  2018                           ;	Stack Full/Underflow Reset Enable bit
  2019                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2020                           ;	Single-Supply ICSP Enable bit
  2021                           ;	LVP = OFF, Single-Supply ICSP disabled
  2022                           ;	Extended Instruction Set Enable bit
  2023                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2024                           ;	Background Debugger Enable bit
  2025                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  2026  300006                     	org	3145734
  2027  300006  80                 	db	128
  2028                           
  2029                           ; Padding undefined space
  2030  300007                     	org	3145735
  2031  300007  FF                 	db	255
  2032                           
  2033                           ;Config register CONFIG5L @ 0x300008
  2034                           ;	Code Protection bit
  2035                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2036                           ;	Code Protection bit
  2037                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2038                           ;	Code Protection bit
  2039                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2040                           ;	Code Protection bit
  2041                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2042  300008                     	org	3145736
  2043  300008  0F                 	db	15
  2044                           
  2045                           ;Config register CONFIG5H @ 0x300009
  2046                           ;	Boot Block Code Protection bit
  2047                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2048                           ;	Data EEPROM Code Protection bit
  2049                           ;	CPD = OFF, Data EEPROM not code-protected
  2050  300009                     	org	3145737
  2051  300009  C0                 	db	192
  2052                           
  2053                           ;Config register CONFIG6L @ 0x30000A
  2054                           ;	Write Protection bit
  2055                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2056                           ;	Write Protection bit
  2057                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2058                           ;	Write Protection bit
  2059                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2060                           ;	Write Protection bit
  2061                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2062  30000A                     	org	3145738
  2063  30000A  0F                 	db	15
  2064                           
  2065                           ;Config register CONFIG6H @ 0x30000B
  2066                           ;	Configuration Register Write Protection bit
  2067                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2068                           ;	Boot Block Write Protection bit
  2069                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2070                           ;	Data EEPROM Write Protection bit
  2071                           ;	WRTD = OFF, Data EEPROM not write-protected
  2072  30000B                     	org	3145739
  2073  30000B  E0                 	db	224
  2074                           
  2075                           ;Config register CONFIG7L @ 0x30000C
  2076                           ;	Table Read Protection bit
  2077                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2078                           ;	Table Read Protection bit
  2079                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2080                           ;	Table Read Protection bit
  2081                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2082                           ;	Table Read Protection bit
  2083                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2084  30000C                     	org	3145740
  2085  30000C  0F                 	db	15
  2086                           
  2087                           ;Config register CONFIG7H @ 0x30000D
  2088                           ;	Boot Block Table Read Protection bit
  2089                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2090  30000D                     	org	3145741
  2091  30000D  40                 	db	64
  2092                           tosu	equ	0xFFF
  2093                           tosh	equ	0xFFE
  2094                           tosl	equ	0xFFD
  2095                           stkptr	equ	0xFFC
  2096                           pclatu	equ	0xFFB
  2097                           pclath	equ	0xFFA
  2098                           pcl	equ	0xFF9
  2099                           tblptru	equ	0xFF8
  2100                           tblptrh	equ	0xFF7
  2101                           tblptrl	equ	0xFF6
  2102                           tablat	equ	0xFF5
  2103                           prodh	equ	0xFF4
  2104                           prodl	equ	0xFF3
  2105                           indf0	equ	0xFEF
  2106                           postinc0	equ	0xFEE
  2107                           postdec0	equ	0xFED
  2108                           preinc0	equ	0xFEC
  2109                           plusw0	equ	0xFEB
  2110                           fsr0h	equ	0xFEA
  2111                           fsr0l	equ	0xFE9
  2112                           wreg	equ	0xFE8
  2113                           indf1	equ	0xFE7
  2114                           postinc1	equ	0xFE6
  2115                           postdec1	equ	0xFE5
  2116                           preinc1	equ	0xFE4
  2117                           plusw1	equ	0xFE3
  2118                           fsr1h	equ	0xFE2
  2119                           fsr1l	equ	0xFE1
  2120                           bsr	equ	0xFE0
  2121                           indf2	equ	0xFDF
  2122                           postinc2	equ	0xFDE
  2123                           postdec2	equ	0xFDD
  2124                           preinc2	equ	0xFDC
  2125                           plusw2	equ	0xFDB
  2126                           fsr2h	equ	0xFDA
  2127                           fsr2l	equ	0xFD9
  2128                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     34      50
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@msg	PTR unsigned char  size(2) Largest target is 16
		 -> main@msg(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_lcdChar
    _printf->_lcdCommand
    _lcdInit->_lcdCommand
    _soInit->_pinMode
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _lcdChar->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0   50607
                                             18 COMRAM    16    16      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               4     2      2   50582
                                             14 COMRAM     4     2      2
                            _lcdChar
                         _lcdCommand
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0   26604
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (3) _soInit                                               0     0      0    1200
                            _pinMode
 ---------------------------------------------------------------------------------
 (4) _pinMode                                              6     2      4    1200
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _pushNibble                                           3     1      2   11605
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           1     1      0   11869
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   11899
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (4) _pushByte                                             4     2      2   11497
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _soWrite                                              3     1      2    6645
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseEnClock                                         0     0      0    2116
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _PulseClockData                                       0     0      0    2116
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    2496
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _digitalWrite                                         6     2      4    2116
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _lcdChar
       _delayMicro
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
           _PulseClockData
             _digitalWrite
           _PulseEnClock
             _digitalWrite
           _digitalWrite
     _lcdCommand
       _delayMili
       _pushByte
     _lcdInit
       _delayMicro
       _delayMili
       _lcdCommand
       _pinMode
       _pushNibble
         _digitalWrite
         _pulseEnablePin
         _soWrite
       _soInit
         _pinMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     22      32       1       39.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      32      15        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Oct 06 20:04:17 2021

         _pulseEnablePin 7970                       l42 7DB0                       l76 7FFE  
                     l93 7930                       l87 77EE                       l96 79B0  
                     l99 7860                      l102 7AAE                      l113 781C  
                    l105 783A                      l141 78D6                      l135 796E  
                    l128 7B62                      l138 7900                      l146 79FE  
                    l170 7A54                      l155 7880                      u600 7C0A  
                    u601 7C06                      u710 7D58                      u630 7C68  
                    u614 7C1C                      u550 7B80                      u711 7D54  
                    u631 7C64                      u615 7C18                      u551 7B7C  
                    u720 7D72                      u704 7D2C                      u640 7C82  
                    u624 7C3C                      u560 7B92                      u800 7E3E  
                    u721 7D6E                      u705 7D28                      u641 7C7E  
                    u625 7C38                      u561 7B8E                      u801 7E3A  
                    u810 7E50                      u811 7E4C                      u734 7D84  
                    u670 7CE0                      u654 7C94                      u590 7BF0  
                    u574 7BA4                      u750 79FA                      u735 7D80  
                    u671 7CDC                      u655 7C90                      u591 7BEC  
                    u575 7BA0                      u751 79F6                      u744 7DA4  
                    u680 7CFA                      u664 7CB4                      u584 7BC4  
                    u920 7FA6                      u904 7F56                      u840 7EB6  
                    u824 7E66                      u760 7DCE                      u745 7DA0  
                    u681 7CF6                      u665 7CB0                      u585 7BC0  
                    u921 7FA2                      u905 7F52                      u841 7EB2  
                    u825 7E62                      u761 7DCA                      u930 7FB8  
                    u914 7F7A                      u850 7EC8                      u834 7E8A  
                    u770 7DE0                      u931 7FB4                      u915 7F76  
                    u851 7EC4                      u835 7E86                      u771 7DDC  
                    u694 7D0C                      u695 7D08                      u960 7930  
                    u944 7FCE                      u880 7F2E                      u864 7EDE  
                    u784 7DF2                      u961 792C                      u945 7FCA  
                    u881 7F2A                      u865 7EDA                      u785 7DEE  
                    u954 7FF2                      u890 7F40                      u874 7F02  
                    u794 7E12                      u970 7A26                      u955 7FEE  
                    u891 7F3C                      u875 7EFE                      u795 7E0E  
                    u971 7A22                      u980 7A54                      u981 7A50  
                    wreg 000FE8                     l1100 7D1A                     l1102 7D3C  
                   l1110 78D8                     l1104 7D58                     l1112 78AE  
                   l1120 79B2                     l1200 7B1C                     l1106 7D72  
                   l1114 7970                     l1130 79E2                     l1122 79C6  
                   l1210 7B5C                     l1202 7B36                     l1108 7D92  
                   l1116 7984                     l1132 79E8                     l1140 7DCE  
                   l1204 7B44                     l1220 7A08                     l1212 7A00  
                   l1070 7B64                     l1118 7990                     l1134 79EA  
                   l1150 7E50                     l1142 7DE0                     l1206 7B50  
                   l1222 7A26                     l1214 7A04                     l1080 7BF0  
                   l1072 7B80                     l1136 79FA                     l1128 79CA  
                   l1160 7EEC                     l1152 7E74                     l1144 7E00  
                   l1208 7B56                     l1224 7A30                     l1090 7C82  
                   l1082 7C0A                     l1074 7B92                     l1170 7F8A  
                   l1162 7F12                     l1154 7E9A                     l1146 7E22  
                   l1138 7DB2                     l1226 7A42                     l1092 7CA2  
                   l1084 7C2A                     l1076 7BB2                     l1180 790E  
                   l1172 7FA6                     l1164 7F2E                     l1156 7EB6  
                   l1148 7E3E                     l1228 7A44                     l1252 7862  
                   l1094 7CC4                     l1086 7C4C                     l1078 7BD4  
                   l1182 7912                     l1174 7FB8                     l1166 7F40  
                   l1158 7EC8                     l1190 7932                     l1254 7874  
                   l1096 7CE0                     l1088 7C68                     l1184 7A58  
                   l1192 7802                     l1176 7FDC                     l1168 7F64  
                   l1098 7CFA                     l1194 7810                     l1178 7902  
                   l1186 783E                     l1188 7820                     l1196 7AB0  
                   l1198 7B10                     u1031 786C                     _main 7862  
       ??_PulseClockData 0007                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000          pushNibble@value 000C  
           ___param_bank 000000   __end_of_pulseEnablePin 79B2                    ?_main 0001  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdChar 781E          __end_of_lcdInit 7B64  
        __end_of_pinMode 8000          __end_of_soWrite 7A00                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
           pushNibble@rs 000A     __end_of_digitalWrite 7DB2          __initialization 7888  
        ?_pulseEnablePin 0001             __end_of_main 7888                   ??_main 0013  
          __activetblptr 000000                   _soInit 7932                ??_lcdChar 000E  
                 isa$std 000001                ??_lcdInit 000F                   main@F5 0023  
                 _printf 7A00             __pdataCOMRAM 0023                ??_pinMode 0005  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_soWrite 0009         __end_of_pushByte 7AB0               __accesstop 0080  
__end_of__initialization 78A8            ___rparam_used 000001            pushByte@value 000D  
            pinMode@type 0003           __pcstackCOMRAM 0001       __size_of_delayMili 0030  
  __size_of_digitalWrite 024E               _delayMicro 77EE               _lcdCommand 781E  
                ?_soInit 0001                  ?_printf 000F             _digitalWrite 7B64  
      __end_of_delayMili 7932         ??_pulseEnablePin 0007                  __Hparam 0000  
                __Lparam 0000                ?_pushByte 000A                  __pcinit 7888  
                _lcdChar 7800                  __ramtop 0600          __size_of_soInit 003E  
                _lcdInit 7AB0                  __ptext0 7862                  __ptext1 7A00  
                __ptext2 7AB0                  __ptext3 7932                  __ptext4 7DB2  
                __ptext5 783C                  __ptext6 781E                  __ptext7 7902  
                __ptext8 7800                  __ptext9 7A56          __size_of_printf 0056  
                _pinMode 7DB2               delayMili@a 0001               delayMili@i 0004  
                _soWrite 79B2                  main@msg 0013     end_of_initialization 78A8  
          ?_PulseEnClock 0001              ?_delayMicro 0001                  printf@i 0012  
                postdec1 000FE5              ?_lcdCommand 0001                  postinc0 000FEE  
                postinc2 000FDE               ??_pushByte 000C  __size_of_PulseClockData 002A  
             _pushNibble 783C           ??_PulseEnClock 0007            __pidataCOMRAM 77F0  
         __end_of_soInit 7970           __end_of_printf 7A56      __size_of_delayMicro 0002  
    start_initialization 7888      __size_of_lcdCommand 001E                 ??_soInit 0007  
               ??_printf 0011              ?_pushNibble 000A               pinMode@pin 0001  
              _delayMili 7902           _PulseClockData 78AE     __end_of_PulseEnClock 7902  
               ?_lcdChar 0001        __size_of_pushByte 005A                 ?_lcdInit 0001  
               ?_pinMode 0001                 ?_soWrite 0007             ??_delayMicro 0003  
             ?_delayMili 0001   __end_of_PulseClockData 78D8      __size_of_pushNibble 0026  
           ??_lcdCommand 000E          lcdCommand@value 000E       __end_of_delayMicro 77F0  
              copy_data0 789C       __end_of_lcdCommand 783C               pushByte@rs 000A  
           lcdChar@value 000E                 __Hrparam 0000                 __Lrparam 0000  
        ?_PulseClockData 0001  __size_of_pulseEnablePin 0042         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4         __size_of_pinMode 024E                 __ptext10 79B2  
               __ptext11 78D8                 __ptext12 78AE                 __ptext13 7970  
               __ptext14 7B64                 __ptext15 77EE         __size_of_soWrite 004E  
          __size_of_main 0026              ??_delayMili 0003    __size_of_PulseEnClock 002A  
            delayMicro@a 0001                 isa$xinst 000000             soWrite@value 0007  
               _pushByte 7A56                printf@msg 000F             ??_pushNibble 000C  
          ?_digitalWrite 0001             _PulseEnClock 78D8        digitalWrite@value 0003  
               soWrite@i 0009       __end_of_pushNibble 7862           ??_digitalWrite 0005  
        digitalWrite@pin 0001  
