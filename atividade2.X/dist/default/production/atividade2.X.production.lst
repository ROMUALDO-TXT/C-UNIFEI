

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Oct 08 23:27:19 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4520 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _PORTD	set	3971
    49  0000                     _TRISD	set	3989
    50                           
    51                           ; #config settings
    52                           
    53                           	psect	cinit
    54  007F3A                     __pcinit:
    55                           	callstack 0
    56  007F3A                     start_initialization:
    57                           	callstack 0
    58  007F3A                     __initialization:
    59                           	callstack 0
    60  007F3A                     end_of_initialization:
    61                           	callstack 0
    62  007F3A                     __end_of__initialization:
    63                           	callstack 0
    64  007F3A  0100               	movlb	0
    65  007F3C  EFA0  F03F         	goto	_main	;jump to C main() function
    66                           
    67                           	psect	cstackCOMRAM
    68  000001                     __pcstackCOMRAM:
    69                           	callstack 0
    70  000001                     ??_tempo:
    71  000001                     
    72                           ; 1 bytes @ 0x0
    73  000001                     	ds	3
    74  000004                     tempo@l:
    75                           	callstack 0
    76                           
    77                           ; 2 bytes @ 0x3
    78  000004                     	ds	2
    79  000006                     tempo@x:
    80                           	callstack 0
    81                           
    82                           ; 1 bytes @ 0x5
    83  000006                     	ds	1
    84  000007                     tempo@i:
    85                           	callstack 0
    86                           
    87                           ; 1 bytes @ 0x6
    88  000007                     	ds	1
    89  000008                     tempo@j:
    90                           	callstack 0
    91                           
    92                           ; 1 bytes @ 0x7
    93  000008                     	ds	1
    94  000009                     tempo@k:
    95                           	callstack 0
    96                           
    97                           ; 1 bytes @ 0x8
    98  000009                     	ds	1
    99  00000A                     
   100                           ; 1 bytes @ 0x9
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 5 in file "main.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;  j               1    0        unsigned char 
   111 ;;  i               1    0        unsigned char 
   112 ;;  x               1    0        unsigned char 
   113 ;; Return value:  Size  Location     Type
   114 ;;                  1    wreg      void 
   115 ;; Registers used:
   116 ;;		wreg, status,2, status,0, cstack
   117 ;; Tracked objects:
   118 ;;		On entry : 0/0
   119 ;;		On exit  : 0/0
   120 ;;		Unchanged: 0/0
   121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   122 ;;      Params:         0       0       0       0       0       0       0
   123 ;;      Locals:         0       0       0       0       0       0       0
   124 ;;      Temps:          0       0       0       0       0       0       0
   125 ;;      Totals:         0       0       0       0       0       0       0
   126 ;;Total ram usage:        0 bytes
   127 ;; Hardware stack levels required when called: 1
   128 ;; This function calls:
   129 ;;		_tempo
   130 ;; This function is called by:
   131 ;;		Startup code after reset
   132 ;; This function uses a non-reentrant model
   133 ;;
   134                           
   135                           	psect	text0
   136  007F40                     __ptext0:
   137                           	callstack 0
   138  007F40                     _main:
   139                           	callstack 30
   140  007F40                     
   141                           ;main.c: 7:     unsigned char x;;main.c: 8:     unsigned char i, j;;main.c: 9:     TRISD
      +                           = 0x00;
   142  007F40  0E00               	movlw	0
   143  007F42  6E95               	movwf	149,c	;volatile
   144                           
   145                           ;main.c: 10:     PORTD = 0x00;
   146  007F44  0E00               	movlw	0
   147  007F46  6E83               	movwf	131,c	;volatile
   148  007F48                     l11:
   149                           
   150                           ;main.c: 13:         PORTD = 0b00000010;
   151  007F48  0E02               	movlw	2
   152  007F4A  6E83               	movwf	131,c	;volatile
   153  007F4C                     
   154                           ;main.c: 14:         tempo(40);
   155  007F4C  0E28               	movlw	40
   156  007F4E  ECBB  F03F         	call	_tempo
   157  007F52                     
   158                           ;main.c: 15:         PORTD = 0x00;
   159  007F52  0E00               	movlw	0
   160  007F54  6E83               	movwf	131,c	;volatile
   161  007F56                     
   162                           ;main.c: 17:         PORTD = 0b00000011;
   163  007F56  0E03               	movlw	3
   164  007F58  6E83               	movwf	131,c	;volatile
   165  007F5A                     
   166                           ;main.c: 18:         tempo(5);
   167  007F5A  0E05               	movlw	5
   168  007F5C  ECBB  F03F         	call	_tempo
   169                           
   170                           ;main.c: 19:         PORTD = 0x00;
   171  007F60  0E00               	movlw	0
   172  007F62  6E83               	movwf	131,c	;volatile
   173                           
   174                           ;main.c: 20:         PORTD = 0b00000001;
   175  007F64  0E01               	movlw	1
   176  007F66  6E83               	movwf	131,c	;volatile
   177  007F68                     
   178                           ;main.c: 21:         tempo(50);
   179  007F68  0E32               	movlw	50
   180  007F6A  ECBB  F03F         	call	_tempo
   181                           
   182                           ;main.c: 22:     }
   183  007F6E  EFA4  F03F         	goto	l11
   184  007F72  EF00  F000         	goto	start
   185  007F76                     __end_of_main:
   186                           	callstack 0
   187                           
   188 ;; *************** function _tempo *****************
   189 ;; Defined at:
   190 ;;		line 3 in file "delay.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;  x               1    wreg     unsigned char 
   193 ;; Auto vars:     Size  Location     Type
   194 ;;  x               1    5[COMRAM] unsigned char 
   195 ;;  l               2    3[COMRAM] int 
   196 ;;  i               1    6[COMRAM] unsigned char 
   197 ;;  k               1    8[COMRAM] volatile unsigned char 
   198 ;;  j               1    7[COMRAM] volatile unsigned char 
   199 ;; Return value:  Size  Location     Type
   200 ;;                  1    wreg      void 
   201 ;; Registers used:
   202 ;;		wreg, status,2, status,0
   203 ;; Tracked objects:
   204 ;;		On entry : 0/0
   205 ;;		On exit  : 0/0
   206 ;;		Unchanged: 0/0
   207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   208 ;;      Params:         0       0       0       0       0       0       0
   209 ;;      Locals:         6       0       0       0       0       0       0
   210 ;;      Temps:          3       0       0       0       0       0       0
   211 ;;      Totals:         9       0       0       0       0       0       0
   212 ;;Total ram usage:        9 bytes
   213 ;; Hardware stack levels used: 1
   214 ;; This function calls:
   215 ;;		Nothing
   216 ;; This function is called by:
   217 ;;		_main
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221                           	psect	text1
   222  007F76                     __ptext1:
   223                           	callstack 0
   224  007F76                     _tempo:
   225                           	callstack 30
   226                           
   227                           ;incstack = 0
   228                           ;tempo@x stored from wreg
   229  007F76  6E06               	movwf	tempo@x^0,c
   230  007F78                     
   231                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     unsigned char i;;delay.c: 
      +                          7:     for (int l = 0; l < x; l++) {
   232  007F78  0E00               	movlw	0
   233  007F7A  6E05               	movwf	(tempo@l+1)^0,c
   234  007F7C  0E00               	movlw	0
   235  007F7E  6E04               	movwf	tempo@l^0,c
   236  007F80  EFED  F03F         	goto	l735
   237  007F84                     l703:
   238                           
   239                           ;delay.c: 8:         for (i = 0; i < 100; i++) {
   240  007F84  0E00               	movlw	0
   241  007F86  6E07               	movwf	tempo@i^0,c
   242  007F88                     l709:
   243                           
   244                           ;delay.c: 9:             for (j = 0; j < 41; j++) {
   245  007F88  0E00               	movlw	0
   246  007F8A  6E08               	movwf	tempo@j^0,c	;volatile
   247  007F8C                     l711:
   248  007F8C  0E28               	movlw	40
   249  007F8E  6408               	cpfsgt	tempo@j^0,c	;volatile
   250  007F90  EFCC  F03F         	goto	u11
   251  007F94  EFCE  F03F         	goto	u10
   252  007F98                     u11:
   253  007F98  EFD0  F03F         	goto	l715
   254  007F9C                     u10:
   255  007F9C  EFE2  F03F         	goto	l729
   256  007FA0                     l715:
   257                           
   258                           ;delay.c: 10:                 for (k = 0; k < 3; k++);
   259  007FA0  0E00               	movlw	0
   260  007FA2  6E09               	movwf	tempo@k^0,c	;volatile
   261  007FA4                     l717:
   262  007FA4  0E02               	movlw	2
   263  007FA6  6409               	cpfsgt	tempo@k^0,c	;volatile
   264  007FA8  EFD8  F03F         	goto	u21
   265  007FAC  EFDA  F03F         	goto	u20
   266  007FB0                     u21:
   267  007FB0  EFDC  F03F         	goto	l721
   268  007FB4                     u20:
   269  007FB4  EFDF  F03F         	goto	l725
   270  007FB8                     l721:
   271  007FB8  2A09               	incf	tempo@k^0,f,c	;volatile
   272  007FBA  EFD2  F03F         	goto	l717
   273  007FBE                     l725:
   274                           
   275                           ;delay.c: 11:             }
   276  007FBE  2A08               	incf	tempo@j^0,f,c	;volatile
   277  007FC0  EFC6  F03F         	goto	l711
   278  007FC4                     l729:
   279                           
   280                           ;delay.c: 12:         }
   281  007FC4  2A07               	incf	tempo@i^0,f,c
   282  007FC6  0E63               	movlw	99
   283  007FC8  6407               	cpfsgt	tempo@i^0,c
   284  007FCA  EFE9  F03F         	goto	u31
   285  007FCE  EFEB  F03F         	goto	u30
   286  007FD2                     u31:
   287  007FD2  EFC4  F03F         	goto	l709
   288  007FD6                     u30:
   289  007FD6                     
   290                           ;delay.c: 13:     }
   291  007FD6  4A04               	infsnz	tempo@l^0,f,c
   292  007FD8  2A05               	incf	(tempo@l+1)^0,f,c
   293  007FDA                     l735:
   294  007FDA  5006               	movf	tempo@x^0,w,c
   295  007FDC  6E01               	movwf	??_tempo^0,c
   296  007FDE  6A02               	clrf	(??_tempo+1)^0,c
   297  007FE0  5001               	movf	??_tempo^0,w,c
   298  007FE2  5C04               	subwf	tempo@l^0,w,c
   299  007FE4  5005               	movf	(tempo@l+1)^0,w,c
   300  007FE6  0A80               	xorlw	128
   301  007FE8  6E03               	movwf	(??_tempo+2)^0,c
   302  007FEA  5002               	movf	(??_tempo+1)^0,w,c
   303  007FEC  0A80               	xorlw	128
   304  007FEE  5803               	subwfb	(??_tempo+2)^0,w,c
   305  007FF0  A0D8               	btfss	status,0,c
   306  007FF2  EFFD  F03F         	goto	u41
   307  007FF6  EFFF  F03F         	goto	u40
   308  007FFA                     u41:
   309  007FFA  EFC2  F03F         	goto	l703
   310  007FFE                     u40:
   311  007FFE  0012               	return		;funcret
   312  008000                     __end_of_tempo:
   313                           	callstack 0
   314  0000                     
   315                           	psect	rparam
   316  0000                     
   317                           	psect	idloc
   318                           
   319                           ;Config register IDLOC0 @ 0x200000
   320                           ;	unspecified, using default values
   321  200000                     	org	2097152
   322  200000  FF                 	db	255
   323                           
   324                           ;Config register IDLOC1 @ 0x200001
   325                           ;	unspecified, using default values
   326  200001                     	org	2097153
   327  200001  FF                 	db	255
   328                           
   329                           ;Config register IDLOC2 @ 0x200002
   330                           ;	unspecified, using default values
   331  200002                     	org	2097154
   332  200002  FF                 	db	255
   333                           
   334                           ;Config register IDLOC3 @ 0x200003
   335                           ;	unspecified, using default values
   336  200003                     	org	2097155
   337  200003  FF                 	db	255
   338                           
   339                           ;Config register IDLOC4 @ 0x200004
   340                           ;	unspecified, using default values
   341  200004                     	org	2097156
   342  200004  FF                 	db	255
   343                           
   344                           ;Config register IDLOC5 @ 0x200005
   345                           ;	unspecified, using default values
   346  200005                     	org	2097157
   347  200005  FF                 	db	255
   348                           
   349                           ;Config register IDLOC6 @ 0x200006
   350                           ;	unspecified, using default values
   351  200006                     	org	2097158
   352  200006  FF                 	db	255
   353                           
   354                           ;Config register IDLOC7 @ 0x200007
   355                           ;	unspecified, using default values
   356  200007                     	org	2097159
   357  200007  FF                 	db	255
   358                           
   359                           	psect	config
   360                           
   361                           ; Padding undefined space
   362  300000                     	org	3145728
   363  300000  FF                 	db	255
   364                           
   365                           ;Config register CONFIG1H @ 0x300001
   366                           ;	Oscillator Selection bits
   367                           ;	OSC = HS, HS oscillator
   368                           ;	Fail-Safe Clock Monitor Enable bit
   369                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   370                           ;	Internal/External Oscillator Switchover bit
   371                           ;	IESO = OFF, Oscillator Switchover mode disabled
   372  300001                     	org	3145729
   373  300001  02                 	db	2
   374                           
   375                           ;Config register CONFIG2L @ 0x300002
   376                           ;	Power-up Timer Enable bit
   377                           ;	PWRT = OFF, PWRT disabled
   378                           ;	Brown-out Reset Enable bits
   379                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   380                           ;	Brown Out Reset Voltage bits
   381                           ;	BORV = 0x2E, user specified literal
   382  300002                     	org	3145730
   383  300002  71                 	db	369
   384                           
   385                           ;Config register CONFIG2H @ 0x300003
   386                           ;	Watchdog Timer Enable bit
   387                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   388                           ;	Watchdog Timer Postscale Select bits
   389                           ;	WDTPS = 1, 1:1
   390  300003                     	org	3145731
   391  300003  00                 	db	0
   392                           
   393                           ; Padding undefined space
   394  300004                     	org	3145732
   395  300004  FF                 	db	255
   396                           
   397                           ;Config register CONFIG3H @ 0x300005
   398                           ;	CCP2 MUX bit
   399                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   400                           ;	PORTB A/D Enable bit
   401                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   402                           ;	Low-Power Timer1 Oscillator Enable bit
   403                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   404                           ;	MCLR Pin Enable bit
   405                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   406  300005                     	org	3145733
   407  300005  83                 	db	131
   408                           
   409                           ;Config register CONFIG4L @ 0x300006
   410                           ;	Stack Full/Underflow Reset Enable bit
   411                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   412                           ;	Single-Supply ICSP Enable bit
   413                           ;	LVP = OFF, Single-Supply ICSP disabled
   414                           ;	Extended Instruction Set Enable bit
   415                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   416                           ;	Background Debugger Enable bit
   417                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   418  300006                     	org	3145734
   419  300006  80                 	db	128
   420                           
   421                           ; Padding undefined space
   422  300007                     	org	3145735
   423  300007  FF                 	db	255
   424                           
   425                           ;Config register CONFIG5L @ 0x300008
   426                           ;	Code Protection bit
   427                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   428                           ;	Code Protection bit
   429                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   430                           ;	Code Protection bit
   431                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   432                           ;	Code Protection bit
   433                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   434  300008                     	org	3145736
   435  300008  0F                 	db	15
   436                           
   437                           ;Config register CONFIG5H @ 0x300009
   438                           ;	Boot Block Code Protection bit
   439                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   440                           ;	Data EEPROM Code Protection bit
   441                           ;	CPD = OFF, Data EEPROM not code-protected
   442  300009                     	org	3145737
   443  300009  C0                 	db	192
   444                           
   445                           ;Config register CONFIG6L @ 0x30000A
   446                           ;	Write Protection bit
   447                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   448                           ;	Write Protection bit
   449                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   450                           ;	Write Protection bit
   451                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   452                           ;	Write Protection bit
   453                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   454  30000A                     	org	3145738
   455  30000A  0F                 	db	15
   456                           
   457                           ;Config register CONFIG6H @ 0x30000B
   458                           ;	Configuration Register Write Protection bit
   459                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   460                           ;	Boot Block Write Protection bit
   461                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   462                           ;	Data EEPROM Write Protection bit
   463                           ;	WRTD = OFF, Data EEPROM not write-protected
   464  30000B                     	org	3145739
   465  30000B  E0                 	db	224
   466                           
   467                           ;Config register CONFIG7L @ 0x30000C
   468                           ;	Table Read Protection bit
   469                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   470                           ;	Table Read Protection bit
   471                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   472                           ;	Table Read Protection bit
   473                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   474                           ;	Table Read Protection bit
   475                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   476  30000C                     	org	3145740
   477  30000C  0F                 	db	15
   478                           
   479                           ;Config register CONFIG7H @ 0x30000D
   480                           ;	Boot Block Table Read Protection bit
   481                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   482  30000D                     	org	3145741
   483  30000D  40                 	db	64
   484                           tosu	equ	0xFFF
   485                           tosh	equ	0xFFE
   486                           tosl	equ	0xFFD
   487                           stkptr	equ	0xFFC
   488                           pclatu	equ	0xFFB
   489                           pclath	equ	0xFFA
   490                           pcl	equ	0xFF9
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           prodh	equ	0xFF4
   496                           prodl	equ	0xFF3
   497                           indf0	equ	0xFEF
   498                           postinc0	equ	0xFEE
   499                           postdec0	equ	0xFED
   500                           preinc0	equ	0xFEC
   501                           plusw0	equ	0xFEB
   502                           fsr0h	equ	0xFEA
   503                           fsr0l	equ	0xFE9
   504                           wreg	equ	0xFE8
   505                           indf1	equ	0xFE7
   506                           postinc1	equ	0xFE6
   507                           postdec1	equ	0xFE5
   508                           preinc1	equ	0xFE4
   509                           plusw1	equ	0xFE3
   510                           fsr1h	equ	0xFE2
   511                           fsr1l	equ	0xFE1
   512                           bsr	equ	0xFE0
   513                           indf2	equ	0xFDF
   514                           postinc2	equ	0xFDE
   515                           postdec2	equ	0xFDD
   516                           preinc2	equ	0xFDC
   517                           plusw2	equ	0xFDB
   518                           fsr2h	equ	0xFDA
   519                           fsr2l	equ	0xFD9
   520                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      9       9
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_tempo

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     120
                              _tempo
 ---------------------------------------------------------------------------------
 (1) _tempo                                                9     9      0     120
                                              0 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _tempo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      9       9       1        7.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Oct 08 23:27:19 2021

                     l11 7F48                       l25 7FFE                       u10 7F9C  
                     u11 7F98                       u20 7FB4                       u21 7FB0  
                     u30 7FD6                       u31 7FD2                       u40 7FFE  
                     u41 7FFA                      l701 7F78                      l711 7F8C  
                    l703 7F84                      l721 7FB8                      l731 7FC6  
                    l715 7FA0                      l733 7FD6                      l725 7FBE  
                    l717 7FA4                      l709 7F88                      l741 7F52  
                    l735 7FDA                      l743 7F56                      l729 7FC4  
                    l745 7F5A                      l737 7F40                      l747 7F68  
                    l739 7F4C                     _main 7F40                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _PORTD 000F83  
                  _TRISD 000F95                    _tempo 7F76                    status 000FD8  
        __initialization 7F3A             __end_of_main 7F76                   ??_main 000A  
          __activetblptr 000000                   ?_tempo 0001                   isa$std 000001  
                 tempo@i 0007                   tempo@j 0008                   tempo@k 0009  
                 tempo@l 0004                   tempo@x 0006               __accesstop 0080  
__end_of__initialization 7F3A            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_tempo 8000                  ??_tempo 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F3A                  __ramtop 0600  
                __ptext0 7F40                  __ptext1 7F76     end_of_initialization 7F3A  
    start_initialization 7F3A           __size_of_tempo 008A                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0036                 isa$xinst 000000  
